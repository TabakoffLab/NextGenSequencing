mappedPairs = as.numeric(gsub("Aligned pairs: ","",x[10,1]))
alignStats = rbind(alignStats,data.frame(sample,numReads,mappedLeft,mappedRight,mappedPairs))
}
alignStats$numReadFrag = (alignStats$mappedLeft + alignStats$mappedRight)
alignStats$numDeletedPairedReads = (alignStats$mappedLeft + alignStats$mappedRight - alignStats$mappedPairs)
alignStats = alignStats[,c("sample","numReads","numReadFrag","mappedPairs","numDeletedPairedReads")]
alignTable = data.frame(sample=alignStats$sample,pctRiboReads=as.numeric(alignStats$numDeletedPairedReads)/as.numeric(alignStats$numReads))
alignTable$pctRiboReads = paste(sprintf("%.1f",round(100*alignTable$pctRiboReads,1)),"%",sep="")
colnames(alignTable) = c("Sample","Percent of Paired-End Reads Aligned to rRNA")
alignTable
alignStats
23801415/117163685
51383797/(2*117163685)
rm(list=ls())
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Heart.totalRNA/data")
options(stringsAsFactors=FALSE)
sampleList = paste(rep(c("BNLx","SHR"),each=4),c(1:4),sep="")
rm(list=ls())
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Heart.totalRNA/data")
options(stringsAsFactors=FALSE)
sampleList = paste(rep(c("BNLx","SHR"),each=4),c(1:4),sep="")
alignStats = c()
for(i in sampleList){
x = read.table(file=paste("rRNA.summary.",i,".txt",sep=""),sep="\t",header=FALSE)
sample = i
numReads = as.numeric(gsub(":","",gsub("Input","",x[2,1])))
mappedLeft = as.numeric(gsub(":","",gsub("Mapped","",unlist(lapply(strsplit(x[3,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedRight = as.numeric(gsub(":","",gsub("Mapped ","",unlist(lapply(strsplit(x[7,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedPairs = as.numeric(gsub("Aligned pairs: ","",x[10,1]))
alignStats = rbind(alignStats,data.frame(sample,numReads,mappedLeft,mappedRight,mappedPairs))
}
alignStats$numReadFrag = (alignStats$mappedLeft + alignStats$mappedRight)
alignStats$numDeletedPairedReads = (alignStats$mappedLeft + alignStats$mappedRight - alignStats$mappedPairs)
alignStats = alignStats[,c("sample","numReads","numReadFrag","mappedPairs","numDeletedPairedReads")]
alignTable = data.frame(sample=alignStats$sample,pctRiboReads=as.numeric(alignStats$numDeletedPairedReads)/as.numeric(alignStats$numReads))
alignTable$pctRiboReads = paste(sprintf("%.1f",round(100*alignTable$pctRiboReads,1)),"%",sep="")
colnames(alignTable) = c("Sample","Percent of Paired-End Reads Aligned to rRNA")
alignTable
alignTable = data.frame(sample=alignStats$sample,numTrimmedReads=prettyNum(alignStats$numReads,big.mark=","),numDeleted=prettyNum(alignStats$numDeletedPairedReads,big.mark=","),pctRiboReads=as.numeric(alignStats$numDeletedPairedReads)/as.numeric(alignStats$numReads))
alignTable
alignTable = data.frame(sample=alignStats$sample,numTrimmedReads=prettyNum(alignStats$numReads,big.mark=","),numDeleted=prettyNum(alignStats$numDeletedPairedReads,big.mark=","),pctRiboReads=as.numeric(alignStats$numDeletedPairedReads)/as.numeric(alignStats$numReads),numRemaining=alignStats$numReads-alignStats$numDeletedPairedReads)
alignTable
alignTable = data.frame(sample=alignStats$sample,numTrimmedReads=prettyNum(alignStats$numReads,big.mark=","),numDeleted=prettyNum(alignStats$numDeletedPairedReads,big.mark=","),pctRiboReads=as.numeric(alignStats$numDeletedPairedReads)/as.numeric(alignStats$numReads),numRemaining=prettyNum(alignStats$numReads-alignStats$numDeletedPairedReads,big.mark=",")
alignTable = data.frame(sample=alignStats$sample,numTrimmedReads=prettyNum(alignStats$numReads,big.mark=","),numDeleted=prettyNum(alignStats$numDeletedPairedReads,big.mark=","),pctRiboReads=as.numeric(alignStats$numDeletedPairedReads)/as.numeric(alignStats$numReads),numRemaining=prettyNum(alignStats$numReads-alignStats$numDeletedPairedReads,big.mark=","))
alignTable
colnames(alignTable) = c("Sample","Number of Paired-End Reads After Trimming","Number of Paired-End Reads with at Least One Fragment Aligned to rRNA","Percent of Paired-End Reads Aligned to rRNA","Number of Paired-End Reads NOT Aligned to rRNA")
alignTable
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Liver.totalRNA.UCD/")
rawCounts = read.table(file="data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_H","SHR",a[length(a)]))))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(a) a[1]))
rawCounts
readFragments = aggregate(rawCounts$readFrag,by=list(sample=rawCounts$sample),sum)
readFragments$numPairedReads = prettyNum(readFragments$x/2,big.mark=",",scientific=FALSE)
readFragments$numReadFragments = prettyNum(readFragments$x,big.mark=",",scientific=FALSE)
readFragments=readFragments[,colnames(readFragments)!="x"]
forPrint = readFragments[,c("sample","numPairedReads","numReadFragments")]
colnames(forPrint) = c("sample","Number of Paired-End Reads","Number of Read Fragments")
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Liver.totalRNA.UCD/")
rawCounts = read.table(file="data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts$readFrag = as.numeric(rawCounts$V3)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_H","SHR",a[length(a)]))))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(a) a[1]))
readFragments = aggregate(rawCounts$readFrag,by=list(sample=rawCounts$sample),sum)
readFragments$numPairedReads = prettyNum(readFragments$x/2,big.mark=",",scientific=FALSE)
readFragments$numReadFragments = prettyNum(readFragments$x,big.mark=",",scientific=FALSE)
readFragments=readFragments[,colnames(readFragments)!="x"]
forPrint = readFragments[,c("sample","numPairedReads","numReadFragments")]
colnames(forPrint) = c("sample","Number of Paired-End Reads","Number of Read Fragments")
forPrint
rawCounts$readFrag = as.numeric(rawCounts$V3)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_*","SHR",a[length(a)]))))
rawCounts = read.table(file="data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts$readFrag = as.numeric(rawCounts$V3)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_*","SHR",a[length(a)]))))
rawCounts
rawCounts = read.table(file="data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts$readFrag = as.numeric(rawCounts$V3)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_.","SHR",a[length(a)]))))
rawCounts
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Liver.totalRNA.UCD/")
rawCounts = read.table(file="data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts$readFrag = as.numeric(rawCounts$V3)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_.","SHR",a[length(a)]))))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(a) a[1]))
readFragments = aggregate(rawCounts$readFrag,by=list(sample=rawCounts$sample),sum)
readFragments$numPairedReads = prettyNum(readFragments$x/2,big.mark=",",scientific=FALSE)
readFragments$numReadFragments = prettyNum(readFragments$x,big.mark=",",scientific=FALSE)
readFragments=readFragments[,colnames(readFragments)!="x"]
forPrint = readFragments[,c("sample","numPairedReads","numReadFragments")]
forPrint
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Liver.totalRNA.UCD/")
trimmed = read.table(file="data/trimmedReadCounts.02Jul14.txt",sep="",header=FALSE)
trimmed$file = unlist(lapply(strsplit(trimmed$V1,split="/",fixed=TRUE),function(a) a[length(a)]))
trimmed$sample = unlist(lapply(strsplit(trimmed$file,split=".",fixed=TRUE),function(a) a[1]))
trimmed$read = unlist(lapply(strsplit(trimmed$file,split=".",fixed=TRUE),function(a) unlist(lapply(strsplit(a[2],split="_",fixed=TRUE),function(a) a[1]))))
trimmed
trimmed = read.table(file="data/trimmedReadCounts.02Jul14.txt",sep="",header=FALSE)
trimmed$file = unlist(lapply(strsplit(trimmed$V1,split="/",fixed=TRUE),function(a) a[length(a)]))
trimmed$sample = unlist(lapply(strsplit(trimmed$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_.","SHR",a[length(a)]))))
trimmed$sample = unlist(lapply(strsplit(trimmed$sample,split="_",fixed=TRUE),function(a) a[1]))
trimmed
trimmed$read = unlist(lapply(strsplit(trimmed$file,split="_",fixed=TRUE),function(a) a[grep("L00",a)+1]))
trimmed
bySample = merge(trimmed[trimmed$read=="R1",c("sample","V2","V3")],trimmed[trimmed$read=="R2",c("sample","V2")],by="sample")
bySample$numReadFrag = bySample$V3*2
colnames(bySample) = c("sample","avgFragLength.R1","numReads","avgFragLength.R2","numReadFrag")
bySample = merge(readFragments,bySample,by="sample")
bySample$pctReadsAfterTrim = paste(sprintf("%.1f",round(100*bySample$numReads/as.numeric(gsub(",","",bySample$numPairedReads)),1)),"%",sep="")
forPrint2 = bySample[,c("sample","numPairedReads","numReadFragments","avgFragLength.R1","avgFragLength.R2","numReadFrag","pctReadsAfterTrim")]
forPrint2$avgFragLength.R1 = sprintf("%.1f",round(forPrint2$avgFragLength.R1,1))
forPrint2$avgFragLength.R2 = sprintf("%.1f",round(forPrint2$avgFragLength.R2,1))
forPrint2$numReadFrag = prettyNum(forPrint2$numReadFrag,big.mark=",")
forPrint2
colnames(forPrint2) = c("sample","Number of Paired-End Reads","Number of Read Fragments","Average Read Fragment Length After Trimming (first read fragment)","Average Read Fragment Length After Trimming (second read fragment)","Number of Read Fragments After Trimming","Percent of Read Fragments That Remained After Trimming")
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Heart.totalRNA/")
rawCounts = read.table(file="data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts
rawCounts$readFrag = as.numeric(rawCounts$V3)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub("BN_LX_","BNLx",gsub("SHR_H_","SHR",a[length(a)]))))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(a) a[1]))
rawCounts
readFragments = aggregate(rawCounts$readFrag,by=list(sample=rawCounts$sample),sum)
readFragments$numPairedReads = prettyNum(readFragments$x/2,big.mark=",",scientific=FALSE)
readFragments$numReadFragments = prettyNum(readFragments$x,big.mark=",",scientific=FALSE)
readFragments=readFragments[,colnames(readFragments)!="x"]
forPrint = readFragments[,c("sample","numPairedReads","numReadFragments")]
colnames(forPrint) = c("sample","Number of Paired-End Reads","Number of Read Fragments")
forPrint
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Heart.totalRNA/")
trimmed = read.table(file="data/trimmedReadCounts.01Jun14.txt",sep="",header=FALSE)
trimmed
trimmed$sample = unlist(lapply(strsplit(trimmed$file,split="_",fixed=TRUE),function(a) paste(a[1],a[3],sep="")))
trimmed$sample = gsub("BN","BNLx",trimmed$sample)
trimmed$read = unlist(lapply(strsplit(trimmed$file,split="_",fixed=TRUE),function(a) a[10]))
trimmed$lane = unlist(lapply(strsplit(trimmed$file,split="_",fixed=TRUE),function(a) a[9]))
trimmed = read.table(file="data/trimmedReadCounts.01Jun14.txt",sep="",header=FALSE)
trimmed$file = unlist(lapply(strsplit(trimmed$V1,split="/",fixed=TRUE),function(a) a[6]))
trimmed$sample = unlist(lapply(strsplit(trimmed$file,split="_",fixed=TRUE),function(a) paste(a[1],a[3],sep="")))
trimmed$sample = gsub("BN","BNLx",trimmed$sample)
trimmed$read = unlist(lapply(strsplit(trimmed$file,split="_",fixed=TRUE),function(a) a[10]))
trimmed$lane = unlist(lapply(strsplit(trimmed$file,split="_",fixed=TRUE),function(a) a[9]))
trimmed
bySample = merge(trimmed[trimmed$read=="R1",c("sample","lane","V2","V3")],trimmed[trimmed$read=="R2",c("sample","V2")],by="sample")
bySample$numReadFrag = bySample$V3*2
colnames(bySample) = c("sample","lane","avgFragLength.R1","numReads","avgFragLength.R2","numReadFrag")
bySample = merge(readFragments,bySample,by=c("sample","lane"))
bySample$pctReadsAfterTrim = paste(sprintf("%.1f",round(100*bySample$numReads/as.numeric(gsub(",","",bySample$numPairedReads)),1)),"%",sep="")
bySample = merge(trimmed[trimmed$read=="R1",c("sample","lane","V2","V3")],trimmed[trimmed$read=="R2",c("sample","V2")],by="sample")
bySample$numReadFrag = bySample$V3*2
colnames(bySample) = c("sample","lane","avgFragLength.R1","numReads","avgFragLength.R2","numReadFrag")
bySample = merge(readFragments,bySample,by=c("sample"))
bySample
bySample$pctReadsAfterTrim = paste(sprintf("%.1f",round(100*bySample$numReads/as.numeric(gsub(",","",bySample$numPairedReads)),1)),"%",sep="")
forPrint2 = bySample[,c("sample","numPairedReads","numReadFragments","avgFragLength.R1","avgFragLength.R2","numReadFrag","pctReadsAfterTrim")]
forPrint2$avgFragLength.R1 = sprintf("%.1f",round(forPrint2$avgFragLength.R1,1))
forPrint2$avgFragLength.R2 = sprintf("%.1f",round(forPrint2$avgFragLength.R2,1))
forPrint2$numReadFrag = prettyNum(forPrint2$numReadFrag,big.mark=",")
colnames(forPrint2) = c("sample","Number of Paired-End Reads","Number of Read Fragments","Average Read Fragment Length After Trimming (first read fragment)","Average Read Fragment Length After Trimming (second read fragment)","Number of Read Fragments After Trimming","Percent of Read Fragments That Remained After Trimming")
forPrint2
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Liver.totalRNA.UCD/")
rawCounts = read.table(file="data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts$readFrag = as.numeric(rawCounts$V3)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_.","SHR",a[length(a)]))))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(a) a[1]))
readFragments = aggregate(rawCounts$readFrag,by=list(sample=rawCounts$sample),sum)
readFragments$numPairedReads = prettyNum(readFragments$x/2,big.mark=",",scientific=FALSE)
readFragments$numReadFragments = prettyNum(readFragments$x,big.mark=",",scientific=FALSE)
readFragments=readFragments[,colnames(readFragments)!="x"]
forPrint = readFragments[,c("sample","numPairedReads","numReadFragments")]
colnames(forPrint) = c("sample","Number of Paired-End Reads","Number of Read Fragments")
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Liver.totalRNA.UCD/")
trimmed = read.table(file="data/trimmedReadCounts.02Jul14.txt",sep="",header=FALSE)
trimmed$file = unlist(lapply(strsplit(trimmed$V1,split="/",fixed=TRUE),function(a) a[length(a)]))
trimmed$sample = unlist(lapply(strsplit(trimmed$V1,split="/",fixed=TRUE),function(a) gsub("BNLX_","BNLx",gsub("SHR_.","SHR",a[length(a)]))))
trimmed$sample = unlist(lapply(strsplit(trimmed$sample,split="_",fixed=TRUE),function(a) a[1]))
trimmed$read = unlist(lapply(strsplit(trimmed$file,split="_",fixed=TRUE),function(a) a[grep("L00",a)+1]))
bySample = merge(trimmed[trimmed$read=="R1",c("sample","V2","V3")],trimmed[trimmed$read=="R2",c("sample","V2")],by="sample")
bySample$numReadFrag = bySample$V3*2
colnames(bySample) = c("sample","avgFragLength.R1","numReads","avgFragLength.R2","numReadFrag")
bySample = merge(readFragments,bySample,by="sample")
bySample$pctReadsAfterTrim = paste(sprintf("%.1f",round(100*bySample$numReads/as.numeric(gsub(",","",bySample$numPairedReads)),1)),"%",sep="")
forPrint2 = bySample[,c("sample","numPairedReads","numReadFragments","avgFragLength.R1","avgFragLength.R2","numReadFrag","pctReadsAfterTrim")]
forPrint2$avgFragLength.R1 = sprintf("%.1f",round(forPrint2$avgFragLength.R1,1))
forPrint2$avgFragLength.R2 = sprintf("%.1f",round(forPrint2$avgFragLength.R2,1))
forPrint2$numReadFrag = prettyNum(forPrint2$numReadFrag,big.mark=",",scientific=FALSE)
colnames(forPrint2) = c("sample","Number of Paired-End Reads","Number of Read Fragments","Average Read Fragment Length After Trimming (first read fragment)","Average Read Fragment Length After Trimming (second read fragment)","Number of Read Fragments After Trimming","Percent of Read Fragments That Remained After Trimming")
trimmed
mean(trimmed$V3)
rm(list=ls())
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Liver.totalRNA.UCD/data")
options(stringsAsFactors=FALSE)
sampleList = paste(rep(c("BNLx","SHR"),each=3),c(1:3,1,25,5),sep="")
alignStats = c()
for(i in sampleList){
x = read.table(file=paste("rRNA.summary.",i,".txt",sep=""),sep="\t",header=FALSE)
sample = i
numReads = as.numeric(gsub(":","",gsub("Input","",x[2,1])))
mappedLeft = as.numeric(gsub(":","",gsub("Mapped","",unlist(lapply(strsplit(x[3,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedRight = as.numeric(gsub(":","",gsub("Mapped ","",unlist(lapply(strsplit(x[7,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedPairs = as.numeric(gsub("Aligned pairs: ","",x[10,1]))
alignStats = rbind(alignStats,data.frame(sample,numReads,mappedLeft,mappedRight,mappedPairs))
}
alignStats$numReadFrag = (alignStats$mappedLeft + alignStats$mappedRight)
alignStats$numDeletedPairedReads = (alignStats$mappedLeft + alignStats$mappedRight - alignStats$mappedPairs)
alignStats = alignStats[,c("sample","numReads","numReadFrag","mappedPairs","numDeletedPairedReads")]
alignTable = data.frame(sample=alignStats$sample,numTrimmedReads=prettyNum(alignStats$numReads,big.mark=","),numDeleted=prettyNum(alignStats$numDeletedPairedReads,big.mark=","),pctRiboReads=as.numeric(alignStats$numDeletedPairedReads)/as.numeric(alignStats$numReads),numRemaining=prettyNum(alignStats$numReads-alignStats$numDeletedPairedReads,big.mark=","))
alignTable$pctRiboReads = paste(sprintf("%.1f",round(100*alignTable$pctRiboReads,1)),"%",sep="")
colnames(alignTable) = c("Sample","Number of Paired-End Reads After Trimming","Number of Paired-End Reads with at Least One Fragment Aligned to rRNA","Percent of Paired-End Reads Aligned to rRNA","Number of Paired-End Reads NOT Aligned to rRNA")
alignTable
alignStats
prettyNum(sum(alignStats$numReads-alignStats$numDeletedPairedReads),big.mark=",",scientific=FALSE)
89581303+81559584+64293400+102172892+73853947+88542534
prettyNum(mean(alignStats$numReads-alignStats$numDeletedPairedReads),big.mark=",",scientific=FALSE)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq")
#Long RNA
raw.brain.total = read.table(file="BNLx.SHR.Brain.totalRNA/data/rawReadCounts.26Jun14.txt",sep=" ",header=FALSE)
trim.brain.total = read.table(file="BNLx.SHR.Brain.totalRNA/data/trimmedReadCounts.26Jun14.txt",sep=" ",header=FALSE)
raw.brain.total
trim.brain.total
raw.liver = read.table(file="BNLx.SHR.Liver.totalRNA.UCD/data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE)
trim.liver = read.table(file="BNLx.SHR.Liver.totalRNA.UCD/data/trimmedReadCounts.02Jul14.txt",sep=" ",header=FALSE)
trim.liver
rm(list=ls())
setwd("/Volumes/LauraS/NextGenSeq/")
options(stringsAsFactors=FALSE)
prefix = "BNLx.SHR.Brain.totalRNA"
sampleList = paste(rep(c("BNLx","SHR"),each=3),c(1:3),sep="")
alignStats = c()
for(i in sampleList){
x = read.table(file=paste(prefix,"/data/rRNA.summary.",i,".txt",sep=""),sep="\t",header=FALSE)
sample = i
numReads = as.numeric(gsub(":","",gsub("Input","",x[2,1])))
mappedLeft = as.numeric(gsub(":","",gsub("Mapped","",unlist(lapply(strsplit(x[3,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedRight = as.numeric(gsub(":","",gsub("Mapped ","",unlist(lapply(strsplit(x[7,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedPairs = as.numeric(gsub("Aligned pairs: ","",x[10,1]))
alignStats = rbind(alignStats,data.frame(sample,numReads,mappedLeft,mappedRight,mappedPairs))
}
alignStats
prefix = "BNLx.SHR.Brain.totalRNA"
sampleList = paste(rep(c("BNLx","SHR"),each=3),c(1:3),sep="")
alignStats = c()
for(i in sampleList){
x = read.table(file=paste(prefix,"/data/rRNA.summary.",i,".txt",sep=""),sep="\t",header=FALSE)
sample = i
numReads = as.numeric(gsub(":","",gsub("Input","",x[2,1])))
mappedLeft = as.numeric(gsub(":","",gsub("Mapped","",unlist(lapply(strsplit(x[3,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedRight = as.numeric(gsub(":","",gsub("Mapped ","",unlist(lapply(strsplit(x[7,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedPairs = as.numeric(gsub("Aligned pairs: ","",x[10,1]))
alignStats = rbind(alignStats,data.frame(sample,numReads,mappedLeft,mappedRight,mappedPairs))
}
alignStats
alignStats$minusPairs = (alignStats$mappedLeft + alignStats$mappedRight - alignStats$mappedPairs)
alignStats
alignStats$remaining = alignStats$numReads - alignStats$minusPairs
alignStats
rm(list=ls())
setwd("/Volumes/LauraS/NextGenSeq/")
options(stringsAsFactors=FALSE)
rRNA.nums = function(prefix,sampleList){
alignStats = c()
for(i in sampleList){
x = read.table(file=paste(prefix,"/data/rRNA.summary.",i,".txt",sep=""),sep="\t",header=FALSE)
sample = i
numReads = as.numeric(gsub(":","",gsub("Input","",x[2,1])))
mappedLeft = as.numeric(gsub(":","",gsub("Mapped","",unlist(lapply(strsplit(x[3,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedRight = as.numeric(gsub(":","",gsub("Mapped ","",unlist(lapply(strsplit(x[7,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedPairs = as.numeric(gsub("Aligned pairs: ","",x[10,1]))
alignStats = rbind(alignStats,data.frame(sample,numReads,mappedLeft,mappedRight,mappedPairs))
}
alignStats$minusPairs = (alignStats$mappedLeft + alignStats$mappedRight - alignStats$mappedPairs)
alignStats$remaining = alignStats$numReads - alignStats$minusPairs
return(alignStats)
}
reduced.brain.total=rRNA.nums("BNLx.SHR.Brain.totalRNA",paste(rep(c("BNLx","SHR"),each=3),c(1:3),sep=""))
reduced.brain.total
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq")
##  Local Functions  ##
## get counts for rRNA-depletion
rRNA.nums = function(prefix,sampleList){
alignStats = c()
for(i in sampleList){
x = read.table(file=paste(prefix,"/data/rRNA.summary.",i,".txt",sep=""),sep="\t",header=FALSE)
sample = i
numReads = as.numeric(gsub(":","",gsub("Input","",x[2,1])))
mappedLeft = as.numeric(gsub(":","",gsub("Mapped","",unlist(lapply(strsplit(x[3,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedRight = as.numeric(gsub(":","",gsub("Mapped ","",unlist(lapply(strsplit(x[7,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedPairs = as.numeric(gsub("Aligned pairs: ","",x[10,1]))
alignStats = rbind(alignStats,data.frame(sample,numReads,mappedLeft,mappedRight,mappedPairs))
}
alignStats$minusPairs = (alignStats$mappedLeft + alignStats$mappedRight - alignStats$mappedPairs)
alignStats$remaining = alignStats$numReads - alignStats$minusPairs
return(alignStats)
}
raw.brain.total = read.table(file="BNLx.SHR.Brain.totalRNA/data/rawReadCounts.26Jun14.txt",sep=" ",header=FALSE)
trim.brain.total = read.table(file="BNLx.SHR.Brain.totalRNA/data/trimmedReadCounts.26Jun14.txt",sep=" ",header=FALSE)
reduced.brain.total=rRNA.nums("BNLx.SHR.Brain.totalRNA",paste(rep(c("BNLx","SHR"),each=3),c(1:3),sep=""))
raw.brain.polyA = read.table(file="BNLx.SHR.Brain.polyARNA/data/rawReadCounts.27Jun14.txt",sep=" ",header=FALSE)
trim.brain.polyA = read.table(file="BNLx.SHR.Brain.polyARNA/data/trimmedReadCounts.27Jun14.txt",sep=" ",header=FALSE)
raw.heart = read.table(file="BNLx.SHR.Heart.totalRNA/data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE)
trim.heart = read.table(file="BNLx.SHR.Heart.totalRNA/data/trimmedReadCounts.01Jun14.txt",sep=" ",header=FALSE)
reduced.heart=rRNA.nums("BNLx.SHR.Heart.totalRNA",paste(rep(c("BNLx","SHR"),each=4),c(1:4),sep=""))
raw.liver = read.table(file="BNLx.SHR.Liver.totalRNA.UCD/data/rawReadCounts.02Jul14.txt",sep=" ",header=FALSE)
trim.liver = read.table(file="BNLx.SHR.Liver.totalRNA.UCD/data/trimmedReadCounts.02Jul14.txt",sep=" ",header=FALSE)
reduced.liver=rRNA.nums("BNLx.SHR.Liver.totalRNA.UCD",paste(rep(c("BNLx","SHR"),each=3),c(1:3,1,25,5),sep=""))
base = read.table(file="manuscripts/tissueCompare.02Jul2014/documents/dataSets.initiate.txt",sep="\t",header=TRUE)
base
raw.brain.total
base$numRaw[base$tissue=="brain" & base$typeRNA="rRNA-depleted total"] = sum(raw.brain.total$V3)/2
base = read.table(file="manuscripts/tissueCompare.02Jul2014/documents/dataSets.initiate.txt",sep="\t",header=TRUE)
base$numRaw = NA
base$numTrimmed = NA
base$numNo.rRNA = NA
base$numRaw[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(raw.brain.total$V3)/2
base
base$numRaw[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(raw.liver$V3)/2
base$numRaw[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(raw.brain.total$V3)/2
base$numRaw[base$tissue=="brain" & base$typeRNA=="polyA-selected"] = sum(raw.brain.polyA$V3)/2
base$numRaw[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(raw.liver$V3)/2
base$numRaw[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(raw.heart$V3)/2
base
base$numTrimmed[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(trim.brain.total$V3)/2
base$numTrimmed[base$tissue=="brain" & base$typeRNA=="polyA-selected"] = sum(trim.brain.polyA$V3)/2
base$numTrimmed[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(trim.liver$V3)/2
base$numTrimmed[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(trim.heart$V3)/2
base
reduced.liver
base$numNo.rNA[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.brain.total$remaining)
base$numNo.rNA[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.liver$remaining)
base$numNo.rNA[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.heart$remaining)
base
base$numNo.rRNA = NA
base$numNo.rRNA[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.brain.total$remaining)
base$numNo.rRNA[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.liver$remaining)
base$numNo.rRNA[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.heart$remaining)
base = read.table(file="manuscripts/tissueCompare.02Jul2014/documents/dataSets.initiate.txt",sep="\t",header=TRUE)
base$numRaw = NA
base$numTrimmed = NA
base$numNo.rRNA = NA
base$numRaw[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(raw.brain.total$V3)/2
base$numRaw[base$tissue=="brain" & base$typeRNA=="polyA-selected"] = sum(raw.brain.polyA$V3)/2
base$numRaw[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(raw.liver$V3)/2
base$numRaw[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(raw.heart$V3)/2
base$numTrimmed[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(trim.brain.total$V3)/2
base$numTrimmed[base$tissue=="brain" & base$typeRNA=="polyA-selected"] = sum(trim.brain.polyA$V3)/2
base$numTrimmed[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(trim.liver$V3)/2
base$numTrimmed[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(trim.heart$V3)/2
base$numNo.rRNA[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.brain.total$remaining)
base$numNo.rRNA[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.liver$remaining)
base$numNo.rRNA[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.heart$remaining)
base
base$pctAttempted = base$numNo.rRNA / base$numRaw
base$pctAttempted[base$typeRNA=="polyA-selected"] = base$numTrimmed / base$numRaw
base = read.table(file="manuscripts/tissueCompare.02Jul2014/documents/dataSets.initiate.txt",sep="\t",header=TRUE)
base$numRaw = NA
base$numTrimmed = NA
base$numNo.rRNA = NA
base$numRaw[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(raw.brain.total$V3)/2
base$numRaw[base$tissue=="brain" & base$typeRNA=="polyA-selected"] = sum(raw.brain.polyA$V3)/2
base$numRaw[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(raw.liver$V3)/2
base$numRaw[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(raw.heart$V3)/2
base$numTrimmed[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(trim.brain.total$V3)/2
base$numTrimmed[base$tissue=="brain" & base$typeRNA=="polyA-selected"] = sum(trim.brain.polyA$V3)/2
base$numTrimmed[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(trim.liver$V3)/2
base$numTrimmed[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(trim.heart$V3)/2
base$numNo.rRNA[base$tissue=="brain" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.brain.total$remaining)
base$numNo.rRNA[base$tissue=="liver" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.liver$remaining)
base$numNo.rRNA[base$tissue=="heart" & base$typeRNA=="rRNA-depleted total"] = sum(reduced.heart$remaining)
base$pctAttempted = base$numNo.rRNA / base$numRaw
base$pctAttempted[base$typeRNA=="polyA-selected"] = base$numTrimmed[base$typeRNA=="polyA-selected"] / base$numRaw[base$typeRNA=="polyA-selected"]
base
base$avgAttemptedPerSample = base$numNo.rRNA / base$numSamples
base$avgAttemptedPerSample[base$typeRNA=="polyA-selected"] = base$numTrimmed[base$typeRNA=="polyA-selected"] / base$numSamples[base$typeRNA=="polyA-selected"]
base
export.base = base
export.base = base
export.base$numRaw = prettyNum(export.base$numRaw,big.mark=",",scientific=FALSE)
export.base$numTrimmed = prettyNum(export.base$numTrimmed,big.mark=",",scientific=FALSE)
export.base$numNo.rRNA = prettyNum(export.base$numNo.rRNA,big.mark=",",scientific=FALSE)
export.base$numNo.rRNA = prettyNum(round(export.base$avgAttemptedPerSample),big.mark=",",scientific=FALSE)
export.base
export.base = base
export.base$numRaw = prettyNum(export.base$numRaw,big.mark=",",scientific=FALSE)
export.base$numTrimmed = prettyNum(export.base$numTrimmed,big.mark=",",scientific=FALSE)
export.base$numNo.rRNA = prettyNum(export.base$numNo.rRNA,big.mark=",",scientific=FALSE)
export.base$avgAttemptedPerSample = prettyNum(round(export.base$avgAttemptedPerSample),big.mark=",",scientific=FALSE)
export.base
export.base$pctAttempted = paste(sprintf("%.1f",round(export.base$pctAttempted*100,1)),"%",sep="")
export.base
colnames(export.base) = c("tissue","type of RNA", "number of samples","number of paired-end reads sequenced","number of paired-end reads after trimming for quality and adaptors","number of paired-end remaining after removing rRNA reads","percent of sequenced reads remaining after filtering","average number of filtered paired-end reads per sample")
write.table(export.base,file="manuscripts/tissueCompare.02Jul2014/documents/table1.dataSummary.07Jul14.txt",sep="\t",row.names=FALSE)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Heart.totalRNA/")
sample = "SHR3"
x = read.table(file=paste("data/alignStats.",sample,".heart.txt",sep=""),header=FALSE,sep="\t")
x = read.table(file=paste("data/countByChr.",sample,".heart.txt",sep=""),header=FALSE,sep="\t")
colnames(x) = c("id","length",sample,"V4")
x = x[,-4]
if(sample==sampleList[1]) chrCnts = x
chrCnts = x
chrCnts
chromo = chrCnts[grep("chr",chrCnts$id),]
pctBySampleChr = apply(chromo[,-c(1:2)],1,function(a) a/colSums(chromo[,-c(1:2)]))
chromo
chromo$pct = chromo$SHR3/sum(chrCnts$SHR3)
chromo
plot(chromo$length,chromo$SHR3)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Brain.polyARNA/")
rawCounts = read.table(file="data/rawReadCounts.27Jun14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts$readFrag = as.numeric(rawCounts$V3)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$V1,split="/",fixed=TRUE),function(a) gsub(".R2.fq","",gsub(".R1.fq","",a[length(a)]))))
readFragments = aggregate(rawCounts$readFrag,by=list(sample=rawCounts$sample),sum)
readFragments$numPairedReads = prettyNum(readFragments$x/2,big.mark=",",scientific=FALSE)
readFragments$numReadFragments = prettyNum(readFragments$x,big.mark=",",scientific=FALSE)
readFragments=readFragments[,colnames(readFragments)!="x"]
forPrint = readFragments[,c("sample","numPairedReads","numReadFragments")]
colnames(forPrint) = c("sample","Number of Paired-End Reads","Number of Read Fragments")
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Brain.polyARNA/")
trimmed = read.table(file="data/trimmedReadCounts.27Jun14.txt",sep="",header=FALSE)
trimmed$file = unlist(lapply(strsplit(trimmed$V1,split="/",fixed=TRUE),function(a) a[length(a)]))
trimmed$sample = unlist(lapply(strsplit(trimmed$file,split=".",fixed=TRUE),function(a) a[1]))
trimmed$read = unlist(lapply(strsplit(trimmed$file,split=".",fixed=TRUE),function(a) unlist(lapply(strsplit(a[2],split="_",fixed=TRUE),function(a) a[1]))))
bySample = merge(trimmed[trimmed$read=="R1",c("sample","V2","V3")],trimmed[trimmed$read=="R2",c("sample","V2")],by="sample")
bySample$numReadFrag = bySample$V3*2
colnames(bySample) = c("sample","avgFragLength.R1","numReads","avgFragLength.R2","numReadFrag")
bySample = merge(readFragments,bySample,by="sample")
bySample$pctReadsAfterTrim = paste(sprintf("%.1f",round(100*bySample$numReads/as.numeric(gsub(",","",bySample$numPairedReads)),1)),"%",sep="")
forPrint2 = bySample[,c("sample","numPairedReads","numReadFragments","avgFragLength.R1","avgFragLength.R2","numReadFrag","pctReadsAfterTrim")]
forPrint2$avgFragLength.R1 = sprintf("%.1f",round(forPrint2$avgFragLength.R1,1))
forPrint2$avgFragLength.R2 = sprintf("%.1f",round(forPrint2$avgFragLength.R2,1))
forPrint2$numReadFrag = prettyNum(forPrint2$numReadFrag,big.mark=",")
colnames(forPrint2) = c("sample","Number of Paired-End Reads","Number of Read Fragments","Average Read Fragment Length After Trimming (first read fragment)","Average Read Fragment Length After Trimming (second read fragment)","Number of Read Fragments After Trimming","Percent of Read Fragments That Remained After Trimming")
sampleList=c("BNLx1","BNLx2","BNLx3","SHR1","SHR2","SHR3")
alignStats = c()
for(i in sampleList){
x = read.table(file=paste("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Brain.polyARNA/data/align_summary.",i,".txt",sep=""),sep="\t",header=FALSE)
sample = i
numReads = as.numeric(gsub(":","",gsub("Input","",x[2,1])))
mappedLeft = as.numeric(gsub(":","",gsub("Mapped","",unlist(lapply(strsplit(x[3,1],split="(",fixed=TRUE),function(a) a[1])))))
mappedRight = as.numeric(gsub(":","",gsub("Mapped ","",unlist(lapply(strsplit(x[7,1],split="(",fixed=TRUE),function(a) a[1])))))
multiLeft = as.numeric(gsub("of these: ","",unlist(lapply(strsplit(x[4,1],split="(",fixed=TRUE),function(a) a[1]))))
multiRight = as.numeric(gsub("of these: ","",unlist(lapply(strsplit(x[8,1],split="(",fixed=TRUE),function(a) a[1]))))
lotsLeft = as.numeric(gsub(" have >20)","",unlist(lapply(strsplit(x[4,1],split="(",fixed=TRUE),function(a) a[3]))))
lotsRight = as.numeric(gsub(" have >20)","",unlist(lapply(strsplit(x[8,1],split="(",fixed=TRUE),function(a) a[3]))))
mappedPairs = as.numeric(gsub("Aligned pairs: ","",x[10,1]))
multiPairs = as.numeric(gsub("of these: ","",unlist(lapply(strsplit(x[11,1],split="(",fixed=TRUE),function(a) a[1]))))
discordPairs = as.numeric(gsub("and: ","",unlist(lapply(strsplit(x[12,1],split="(",fixed=TRUE),function(a) a[1]))))
alignStats = rbind(alignStats,data.frame(sample,numReads,mappedLeft,mappedRight,multiLeft,multiRight,lotsLeft,lotsRight,mappedPairs,multiPairs,discordPairs))
}
alignTable = data.frame(t(alignStats))
colnames(alignTable) = alignTable[1,]
alignTable = alignTable[-1,]
alignTable$BNLx1.pct = as.numeric(alignTable$BNLx1)/as.numeric(alignTable["numReads","BNLx1"])
alignTable$BNLx2.pct = as.numeric(alignTable$BNLx2)/as.numeric(alignTable["numReads","BNLx2"])
alignTable$BNLx3.pct = as.numeric(alignTable$BNLx3)/as.numeric(alignTable["numReads","BNLx3"])
alignTable$SHR1.pct = as.numeric(alignTable$SHR1)/as.numeric(alignTable["numReads","SHR1"])
alignTable$SHR2.pct = as.numeric(alignTable$SHR2)/as.numeric(alignTable["numReads","SHR2"])
alignTable$SHR3.pct = as.numeric(alignTable$SHR3)/as.numeric(alignTable["numReads","SHR3"])
## format numbers
for(i in sampleList){
alignTable[,i] = prettyNum(alignTable[,i],big.mark=",",scientific=FALSE)
alignTable[,paste(i,".pct",sep="")] = paste(sprintf("%.2f", round(alignTable[,paste(i,".pct",sep="")]*100,2)),"%",sep="")
}
## add labels
labels = read.table(file="/Volumes/LauraS/NextGenSeq/misc/alignLabels.txt",sep="\t",header=TRUE)
alignTable = merge(labels,alignTable,by.x="var",by.y=0)
alignTable = alignTable[order(alignTable$orderNum),]
alignTable = alignTable[,c("Label",paste(rep(sampleList,each=2),rep(c("",".pct"),length(sampleList)),sep=""))]
colnames(alignTable) = c("Label",paste(rep(sampleList,each=2),rep(c(" (num)"," (pct)"),length(sampleList)),sep=""))
options(stringsAsFactors=FALSE)
setwd("/Volumes/LauraS/NextGenSeq/BNLx.SHR.Brain.polyARNA/")
sampleList=c("BNLx1","BNLx2","BNLx3","SHR1","SHR2","SHR3")
for(sample in sampleList){
x = read.table(file=paste("data/countByChr.",sample,".brain.polyA.txt",sep=""),header=FALSE,sep="\t")
colnames(x) = c("id","length",sample,"V4")
x = x[,-4]
if(sample==sampleList[1]) chrCnts = x
if(sample!=sampleList[1]) chrCnts = merge(chrCnts,x,by=c("id","length"))
}
chromo = chrCnts[grep("chr",chrCnts$id),]
pctBySampleChr = apply(chromo[,-c(1:2)],1,function(a) a/colSums(chromo[,-c(1:2)]))
colnames(pctBySampleChr) = chromo[,1]
pctBySampleChr
boxplot(pctBySampleChr)
pctBySampleChr = pctBySampleChr[,paste("chr",c(1:20,"X","M"))]
pctBySampleChr = pctBySampleChr[,paste("chr",c(1:20,"X","M"),sep="")]
boxplot(pctBySampleChr)
boxplot(pctBySampleChr,ylab="percent of alignments",xlab="chromosome",main="Distribution Among Samples of Percent of Alignments By Chromosome")
