both = merge(topSplice,results.transcript,by="gene",all.x=TRUE)
head(both)
both[,c("gene","GeneName","x","strainEffect.y","sexEffect.y","interactionEffect.y")]
both[,c("gene","GeneName","x","interactionFDR.x","strainEffect.y","sexEffect.y","interactionEffect.y")]
results.junct[grep("ENSRNOT00000022148",results.junct$x),]
both[order(both$interactionFDR.x),c("gene","GeneName","x","interactionFDR.x","strainEffect.y","sexEffect.y","interactionEffect.y")]
results.junct[grep("ENSRNOT0000009173",results.junct$x),]
results.junct[grep("ENSRNOT00000009173",results.junct$x),]
results.junct[grep("ENSRNOT00000028116",results.junct$x),]
both[order(both$interactionEffect.x),c("gene","GeneName","x","interactionFDR.x","strainEffect.y","sexEffect.y","interactionEffect.y")]
results.junct[grep("ENSRNOT00000027315",results.junct$x),]
topSplice = results.junct[results.junct$sexEffect<0.0001,]
topSplice$gene = unlist(lapply(strsplit(topSplice$x,split=";",fixed=TRUE),function(a) a[1]))
tmp = topSplice[grep(";",topSplice$x),]
tmp$gene = unlist(lapply(strsplit(tmp$x,split=";",fixed=TRUE),function(a) a[2]))
topSplice = rbind(topSplice,tmp)
both = merge(topSplice,results.transcript,by="gene",all.x=TRUE)
both[order(both$sexEffect.x),c("gene","GeneName","x","interactionFDR.x","strainEffect.y","sexEffect.y","interactionEffect.y")]
topSplice = results.junct[results.junct$sexEffect<0.0001,]
topSplice
topSplice = results.junct[results.junct$sexEffect<0.0001 & results.junct$BNLx.female>0,]
topSplice
topSplice = results.junct[results.junct$sexEffect<0.0001 & results.junct$BNLx.female>0 & results.junct$interactionEffect>0.0001 ,]
topSplice
tmp = topSplice[grep(";",topSplice$x),]
tmp$gene = unlist(lapply(strsplit(tmp$x,split=";",fixed=TRUE),function(a) a[2]))
topSplice = rbind(topSplice,tmp)
both = merge(topSplice,results.transcript,by="gene",all.x=TRUE)
both[order(both$sexEffect.x),c("gene","GeneName","x","interactionFDR.x","strainEffect.y","sexEffect.y","interactionEffect.y")]
topSplice = results.junct[results.junct$sexEffect<0.0001 & results.junct$interactionEffect>0.05 ,]
topSplice
topSplice$gene = unlist(lapply(strsplit(topSplice$x,split=";",fixed=TRUE),function(a) a[1]))
tmp = topSplice[grep(";",topSplice$x),]
tmp$gene = unlist(lapply(strsplit(tmp$x,split=";",fixed=TRUE),function(a) a[2]))
topSplice = rbind(topSplice,tmp)
both = merge(topSplice,results.transcript,by="gene",all.x=TRUE)
both[order(both$sexEffect.x),c("gene","GeneName","x","interactionFDR.x","strainEffect.y","sexEffect.y","interactionEffect.y")]
results.junct[grep("ENSRNOT00000063941",results.junct$x),]
topSplice = results.junct[results.junct$strainEffect<0.0001 & results.junct$interactionEffect>0.05 ,]
topSplice = results.junct[results.junct$strainFDR<0.05 & results.junct$interactionEffect>0.05 ,]
topSplice = results.junct[results.junct$strainFDR<0.01 & results.junct$interactionEffect>0.05 ,]
topSplice = results.junct[results.junct$strainFDR<0.0001 & results.junct$interactionEffect>0.05 ,]
topSplice
topSplice$gene = unlist(lapply(strsplit(topSplice$x,split=";",fixed=TRUE),function(a) a[1]))
tmp = topSplice[grep(";",topSplice$x),]
tmp$gene = unlist(lapply(strsplit(tmp$x,split=";",fixed=TRUE),function(a) a[2]))
topSplice = rbind(topSplice,tmp)
both = merge(topSplice,results.transcript,by="gene",all.x=TRUE)
head(both)
topSplice = results.junct[results.junct$strainFDR<0.0001 & results.junct$interactionEffect>0.05 ,]
topSplice$EnsemblTranscriptID = unlist(lapply(strsplit(topSplice$x,split=";",fixed=TRUE),function(a) a[1]))
tmp = topSplice[grep(";",topSplice$x),]
tmp$EnsemblTranscriptID = unlist(lapply(strsplit(tmp$x,split=";",fixed=TRUE),function(a) a[2]))
topSplice = rbind(topSplice,tmp)
both = merge(topSplice,results.transcript,by.x="EnsemblTranscriptID",by.y="gene",all.x=TRUE)
both[order(both$sexEffect.x),c("gene","GeneName","x","interactionFDR.x","strainEffect.y","sexEffect.y","interactionEffect.y")]
gtfFormat = function(data,FPKM=TRUE){
data$transcript_id = unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub(" transcript_id ","",a[grep("transcript",a)])))
data$gene_id = unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub("gene_id ","",a[grep("gene",a)])))
if(FPKM) data$fpkm = as.numeric(unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub(" FPKM ","",a[grep("FPKM",a)]))))
return(data)
}
ensembl = gtfFormat(read.table(file="/Volumes/saba/gtfFiles/ensGene.RGSC5.0.rn5.cleaned.gtf",sep="\t"),FPKM=FALSE)
ensembl = ensembl[ensembl$V3=="exon",]
start <- aggregate(ensembl$V4,by=list(ensembl$transcript_id),function(a) paste(a,collapse=","))
stop <- aggregate(ensembl$V5,by=list(ensembl$transcript_id),function(a) paste(a,collapse=","))
transcripts <- ensembl[!duplicated(ensembl[,c("transcript_id","V1")]),c("transcript_id","V1","V6","V7")]
onePerTrans <- merge(start,stop,by=1)
onePerTrans <- merge(transcripts,onePerTrans,by=1)
onePerTrans$exonNum = unlist(lapply(strsplit(onePerTrans$x.x,split=",",fixed=TRUE),length))
onePerTrans = onePerTrans[onePerTrans$exonNum>1,]
findJunct <- function(starts,stops){
start <- strsplit(starts,split=",",fixed=TRUE)[[1]]
stop <- strsplit(stops,split=",",fixed=TRUE)[[1]]
junct <- NA
if(length(start)>1) junct <- paste(paste(stop[-length(stop)],start[-1],sep="//"),collapse=",")
return(junct)
}
onePerTrans$exonJunct = apply(onePerTrans[,c("x.x","x.y")],1,function(a) findJunct(a[1],a[2]))
tmp = strsplit(onePerTrans$exonJunct[1:2],split=",",fixed=TRUE)
names(tmp) = onePerTrans$transcript_id[1:2]
junctions= data.frame(transcript_id=unlist(apply(onePerTrans[,c("transcript_id","exonNum")],1,function(a) rep(a[1],as.numeric(a[2])-1))),junct=unlist(strsplit(onePerTrans$exonJunct,split=",",fixed=TRUE)))
dim(junctions)
head(junctions)
junctions = merge(onePerTrans[,c("transcript_id","V1")],junctions,by="transcript_id")
head(junctions)
numJunct = aggregate(junctions$transcript_id,by=list(transcript_id=transcript_id),length)
numJunct = aggregate(junctions$transcript_id,by=list(transcript_id=junctions$transcript_id),length)
head(numJunct)
colnames(numJunct) = c("EnsemblTranscriptID","numJuncts")
head(numJunct)
both = merge(both,numJunct,by="EnsemblTranscriptID",all.x=TRUE)
head(both)
numJunctStrainEff = aggregate(topSplice$EnsemblTranscriptID,by=list(EnsemblTranscriptID=topSplice$EnsemblTranscriptID),length)
head(numJunctStrainEff)
colnames(numJunctStrainEff)[2] = "numJunctStrainEff"
both = merge(both,numJunctStrainEff,by="EnsemblTranscriptID",all.x=TRUE)
both
head(results.transcript)
byGene = aggregate(results.transcript$strainFDR,by=list(EnsemblGeneID=results.transcript$EnsemblGeneID),function(a) sum(a<0.05))
head(byGene)
numTranscripts = aggregate(results.transcript$strainFDR,by=list(EnsemblGeneID=results.transcript$EnsemblGeneID),length)
next = merge(byGene,numTranscripts,by="EnsemblGeneID")
data1 = merge(byGene,numTranscripts,by="EnsemblGeneID")
head(data1)
data1 = data1[data1$x.y>1,]
head(data1)
data1 = data1[data1$x.y>1 & data1$x.x>0,]
data1
results.transcript[results$transcript$EnsemblGeneID %in% data1$EnsemblGeneID,]
results.transcript[results.transcript$EnsemblGeneID %in% data1$EnsemblGeneID,]
data2 = data2[order(data2$EnsemblGeneID),]
data2 = results.transcript[results.transcript$EnsemblGeneID %in% data1$EnsemblGeneID,]
data2 = data2[order(data2$EnsemblGeneID),]
data2
results.junct[grepl("ENSRNOT00000075878",results.junct$x) | grepl("ENSRNOT00000076573",results.junct$x), ]
head(results.junct)
results.junct[grepl("ENSRNOT00000049380",results.junct$x) | grepl("ENSRNOT00000046025",results.junct$x), ]
results.transcript[results.transcript$EnsemblGeneID=="ENSRNOG00000031211",]
results.junct[grepl("ENSRNOT00000014718",results.junct$x) | grepl("ENSRNOT00000076051",results.junct$x) | grepl("ENSRNOT00000076339",results.junct$x) | grepl("ENSRNOT00000076418",results.junct$x), ]
results.transcript[results.transcript$EnsemblGeneID=="ENSRNOG00000010609",]
results.junct[grepl("ENSRNOT00000014718",results.junct$x) | grepl("ENSRNOT00000076051",results.junct$x) | grepl("ENSRNOT00000076339",results.junct$x) | grepl("ENSRNOT00000076418",results.junct$x), ]
int2 = results.transcript[results.transcript$interactionEffect<0.01,]
forHeat = int2[,grep("male",colnames(int2))]
rownames(forHeat) = int2$GeneName
hmcol<-brewer.pal(11,"PRGn")
pdf(file=paste(base.folder,"images/interactionsHeatMap.17Jun15.pdf",sep=""),width=10,height=8)
par(mar=c(7, 6, 4, 4) + 0.1)
heatmap.2(as.matrix(forHeat),scale="row",trace='none',key=TRUE,keysize=1.5,density.info="none",cexCol=2,margins=c(11,7),col=hmcol)
dev.off()
dev.off()
pdf(file=paste(base.folder,"images/interactionsHeatMap.17Jun15.pdf",sep=""),width=8,height=8)
par(mar=c(7, 6, 4, 4) + 0.1)
heatmap.2(as.matrix(forHeat),scale="row",trace='none',key=TRUE,keysize=1.5,density.info="none",cexCol=2,margins=c(11,7),col=hmcol)
dev.off()
pdf(file=paste(base.folder,"images/interactionsHeatMap.17Jun15.pdf",sep=""),width=6,height=8)
par(mar=c(7, 6, 4, 4) + 0.1)
heatmap.2(as.matrix(forHeat),scale="row",trace='none',key=TRUE,keysize=1.5,density.info="none",cexCol=2,margins=c(11,7),col=hmcol)
dev.off()
txnip = results.transcript[results.transcript$GeneName=="Txnip",]
txnip
txnip.plot = t(txnip[,grep("male",colnames(txnip))])
txnip.plot
txnip.plot$relative[1:2] = 2^txnip[,1]/2^txnip["SHR.female",1]
txnip.plot$relative[1:2] = 2^as.numeric(txnip.plot[,1])/2^txnip.plot["SHR.female",1]
txnip.plot = t(txnip[,grep("male",colnames(txnip))])
txnip.plot$relative = NA
txnip.plot$relative[1:2] = 2^as.numeric(txnip.plot[,1])/2^txnip.plot["SHR.female",1]
txnip.plot = data.frame(voom=t(txnip[,grep("male",colnames(txnip))]))
txnip.plot
colnames(txnip.plot) = "voom"
txnip.plot
txnip.plot$relative = NA
txnip.plot$relative[1:2] = 2^as.numeric(txnip.plot[,"voom"])/2^txnip.plot["SHR.female","voom"]
2^as.numeric(txnip.plot[,"voom"])
txnip.plot[1:2,"voom"]
txnip.plot$relative[1:2] = 2^as.numeric(txnip.plot[1:2,"voom"])/2^txnip.plot["SHR.female","voom"]
txnip.plot
txnip.plot$relative[3:4] = 2^as.numeric(txnip.plot[3:4,"voom"])/2^txnip.plot["SHR.male","voom"]
txnip
txnip.plot
barplot(txnip.plot$relative)
data.frame(Female=txnip$relative[1:2],Male=txnip$relative[3:4])
data.frame(Female=txnip.plot$relative[1:2],Male=txnip.plot$relative[3:4])
forPlot = data.frame(Female=txnip.plot$relative[1:2],Male=txnip.plot$relative[3:4])
rownames(forPlot) = c("BNLx","SHR")
barplot(forPlot)
barplot(as.matrix(forPlot))
barplot(as.matrix(forPlot),beside=TRUE)
barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2])
barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2))
legend(0.5,1.75,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2])
legend(2,1.75,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2])
legend(1,1.75,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2])
barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression Compared to SHR in Same Sex")
text(txnip.midpoints,as.matrix(forPlot),label=as.matrix(forPlot))
txnip.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression Compared to SHR in Same Sex")
legend(1,1.75,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2])
text(txnip.midpoints,as.matrix(forPlot),label=as.matrix(forPlot))
sprintf("%.2f",round(as.matrix(forPlot),2))
text(txnip.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)))
pdf(file=paste(base.folder,"images/TxnipInteraction.17Jun15.pdf",sep=""),width=6,height=8)
txnip.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression Compared to SHR in Same Sex")
legend(1,1.75,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2])
text(txnip.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3)
dev.off()
dev.off(0)
dev.off()
pdf(file=paste(base.folder,"images/TxnipInteraction.17Jun15.pdf",sep=""),width=6,height=6)
txnip.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression Compared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=2)
legend(1,1.75,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(txnip.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
pdf(file=paste(base.folder,"images/TxnipInteraction.17Jun15.pdf",sep=""),width=6,height=6)
txnip.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression Compared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=2)
legend(1,1.75,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(txnip.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
pdf(file=paste(base.folder,"images/TxnipInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
txnip.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression Compared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5)
legend(1,2,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(txnip.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
pdf(file=paste(base.folder,"images/TxnipInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
txnip.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5)
legend(1,2,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(txnip.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
EtOh.genes
EtOH.genes
head(results.junct)
anno = read.table(file="/Volumes/saba/annotation/ensemblTranscripts.Rnor_5.0.16Jun15.txt",sep="\t",header=TRUE)
head(anno)
goi.anno = anno[anno$GeneName %in% EtOH.genes,]
head(goi.anno)
results.junct$tmp = unlist(lapply(strsplit(results.junct$x,split=";",fixed=TRUE),function(a) a[1]))
head(results.junct)
goi.junct = merge(goi.anno,results.junct,by.x="EnsemblTranscriptID",by.y="tmp",all.x=TRUE)
head(goi.junct)
head(goi.junct[order(goi.junct$interactionEffect),])
goi.junct[goi.junct$GeneName=="Maats1",]
head(goi.junct[order(goi.junct$sexEffect),])
head(goi.junct[order(goi.junct$strainEffect),])
head(goi.junct[order(goi.junct$strainEffect),],10)
goi.junct[goi.junct$GeneName=="Cd74",]
goi.junct[goi.junct$GeneName=="RT1-CE10",]
goi.junct[goi.junct$GeneName=="Maats1",]
head(goi.junct[order(goi.junct$sexEffect),],10)
head(results.transcript[order(results.transcript$sexEffect),])
sexEffects = results.transcripts[results.transcripts$sexEffect<0.001,]
sexEffects = results.transcript[results.transcript$sexEffect<0.001,]
sexEffects
sexEffects = results.transcript[results.transcript$sexEffect<0.001 & results.transcript$interactionEffect>0.001 & results.transcript$strainEffect>0.001,]
sexEffects$EntrezGeneID[!is.na(sexEffects$EntrezGeneID)]
sexEffects = results.transcript[results.transcript$sexEffect<0.01 & results.transcript$interactionEffect>0.01 & results.transcript$strainEffect>0.01,]
write.table(sexEffects$EntrezGeneID[!is.na(sexEffects$EntrezGeneID)],file=paste(base.folder,"data/sexEffects.17Jun15.txt",sep=""),sep="\t",row.names=FALSE,col.names=FALSE,quote=FALSE)
goi.junct[goi.junct$GeneName=="Maats1",]
goi.junct[goi.junct$GeneName=="Maats1" & goi.junct$interactionEffect<0.01,]
maats1.plot = data.frame(voom=t(maats1[,grep("male",colnames(maats1))]))
maats1 = goi.junct[goi.junct$GeneName=="Maats1" & goi.junct$interactionEffect<0.01,]
maats1.plot = data.frame(voom=t(maats1[,grep("male",colnames(maats1))]))
colnames(maats1.plot) = "voom"
maats1.plot
maats1.plot$relative[1:2] = 2^as.numeric(maats1.plot[1:2,"voom"])/2^maats1.plot["SHR.female","voom"]
maats1.plot$relative[3:4] = 2^as.numeric(maats1.plot[3:4,"voom"])/2^maats1.plot["SHR.male","voom"]
forPlot = data.frame(Female=maats1.plot$relative[1:2],Male=maats1.plot$relative[3:4])
rownames(forPlot) = c("BNLx","SHR")
maats.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5)
pdf(file=paste(base.folder,"images/Maats1JunctInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
maats.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5)
legend(1,2,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(txnip.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
dev.off(0)
dev.off()
forPlot
pdf(file=paste(base.folder,"images/Maats1JunctInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
maats.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,6),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5)
legend(1,2,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(maats1.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
pdf(file=paste(base.folder,"images/Maats1JunctInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
maats1.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,6),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5)
legend(1,2,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(maats1.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
pdf(file=paste(base.folder,"images/Maats1JunctInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
maats1.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,7),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5)
legend(1,5,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(maats1.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
maats1
pdf(file=paste(base.folder,"images/Maats1JunctInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
maats1.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,7),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5,cex.main=2,main="Maats1 - Junction at chr11:67,064,751")
legend(1,5,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(maats1.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
pdf(file=paste(base.folder,"images/Maats1JunctInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
maats1.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,7),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5,cex.main=2,main="Maats1 - Junction ( chr11:67,064,751)")
legend(1,5,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(maats1.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
pdf(file=paste(base.folder,"images/Maats1JunctInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
maats1.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,7),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5,cex.main=1.7,main="Maats1 - Junction (chr11:67,064,751)")
legend(1,5,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(maats1.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
pdf(file=paste(base.folder,"images/Maats1JunctInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
maats1.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,7),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5,cex.main=1.7,main="Maats1 - Junction (chr11:67,064,751)")
legend(1,6.5,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(maats1.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
txnip = results.transcript[results.transcript$GeneName=="Txnip",]
txnip.plot = data.frame(voom=t(txnip[,grep("male",colnames(txnip))]))
colnames(txnip.plot) = "voom"
txnip.plot$relative = NA
txnip.plot$relative[1:2] = 2^as.numeric(txnip.plot[1:2,"voom"])/2^txnip.plot["SHR.female","voom"]
txnip.plot$relative[3:4] = 2^as.numeric(txnip.plot[3:4,"voom"])/2^txnip.plot["SHR.male","voom"]
forPlot = data.frame(Female=txnip.plot$relative[1:2],Male=txnip.plot$relative[3:4])
rownames(forPlot) = c("BNLx","SHR")
pdf(file=paste(base.folder,"images/TxnipInteraction.17Jun15.pdf",sep=""),width=6,height=6)
par(mar=c(5, 6, 4, 2) + 0.1)
txnip.midpoints = barplot(as.matrix(forPlot),beside=TRUE,col=brewer.pal(3,"Set1")[1:2],ylim=c(0,2),ylab="Relative Expression\nCompared to SHR in Same Sex",cex.names=2,cex.axis=2,cex.lab=1.5,cex.main=2,main="Txnip")
legend(1,2,legend=c("BN-Lx","SHR"),fill=brewer.pal(3,"Set1")[1:2],cex=2)
text(txnip.midpoints,as.matrix(forPlot),label=sprintf("%.2f",round(as.matrix(forPlot),2)),pos=3,cex=2)
dev.off()
topSplice = results.junct[results.junct$strainFDR<0.0001 & results.junct$interactionEffect>0.05 ,]
topSplice$EnsemblTranscriptID = unlist(lapply(strsplit(topSplice$x,split=";",fixed=TRUE),function(a) a[1]))
tmp = topSplice[grep(";",topSplice$x),]
tmp$EnsemblTranscriptID = unlist(lapply(strsplit(tmp$x,split=";",fixed=TRUE),function(a) a[2]))
topSplice
head(topSplice[order(topSplice$strainEffect),])
head(topSplice[order(topSplice$strainEffect),],10)
head(topSplice[order(topSplice$strainEffect),],20)
maats1
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/Rat.RI.Brain.smallRNA.batch4/")
rawCounts = read.table(file="data/rawReadCounts.30Jun15.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts
rawCounts$reads = rawCounts$V3
rawCounts$file = rawCounts$V1
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) paste(x[1:2],collapse="_"))))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) paste(x[1:2],collapse="_")))
rawCounts
forPrint = rawCounts[,c("sample","reads")]
forPrint$reads = prettyNum(forPrint$reads,big.mark=",",scientific=FALSE)
colnames(forPrint) = c("sample","Number of Reads")
forPrint
kable(forPrint,align=rep("c",ncol(forPrint)),row.names=FALSE)
library(knitr)
kable(forPrint,align=rep("c",ncol(forPrint)),row.names=FALSE)
rm(list=ls())
options(stringsAsFactors=FALSE)
library(knitr)
base.folder="~/Documents/NextGenSeq/"
batch = "Rat.RI.Liver.smallRNA.batch2"
file = "150602_7001413_0268_BC6K12ANXX_L4678_Tabakoff_demux.csv"
x = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=4,header=TRUE)
x = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=4)
x = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=4,sep=",")
x = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=10,sep=",")
x
x = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=5,sep=",")
head(x)
x = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=4,sep=",")
x = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=5,sep=",")
header = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=4,sep=",",nlines=1)
header = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=4,sep=",",nrows=1)
header
colnames(x) = c("Lane","SampleID","SampleRef","Index","Description","Control","Project","Yield.Mbases","pctPF","numReads","pctRawClustPerLane","pctPerfectIndexReads","pctOneMismatchIndexReads","pctGrtQ30","MeanQualityScore)
x = read.table(file=paste(base.folder,batch,"/data/",file,sep=""),skip=5,sep=",")
colnames(x) = c("Lane","SampleID","SampleRef","Index","Description","Control","Project","Yield.Mbases","pctPF","numReads","pctRawClustPerLane","pctPerfectIndexReads","pctOneMismatchIndexReads","pctGrtQ30","MeanQualityScore")
head(x)
tissue = "Liver"
batch = 2
file = "150602_7001413_0268_BC6K12ANXX_L4678_Tabakoff_demux.csv"
x = read.table(file=paste(base.folder,"Rat.RI.",tissue,".smallRNA.batch",batch,"/data/",file,sep=""),skip=5,sep=",")
colnames(x) = c("Lane","SampleID","SampleRef","Index","Description","Control","Project","Yield.Mbases","pctPF","numReads","pctRawClustPerLane","pctPerfectIndexReads","pctOneMismatchIndexReads","pctGrtQ30","MeanQualityScore")
tissue = "Liver"
batch = 2
file = "150602_7001413_0268_BC6K12ANXX_L4678_Tabakoff_demux.csv"
x = read.table(file=paste(base.folder,"Rat.RI.",tissue,".smallRNA.batch",batch,"/data/",file,sep=""),skip=5,sep=",")
colnames(x) = c("Lane","SampleID","SampleRef","Index","Description","Control","Project","Yield.Mbases","pctPF","numReads","pctRawClustPerLane","pctPerfectIndexReads","pctOneMismatchIndexReads","pctGrtQ30","MeanQualityScore")
x$tissue = tissue
x$batch = batch
x
liverQC = rbind(importQC(tissue="Liver",batch=1,file="150219_7001413_0222_AC6G34ANXX_L1234_Tabakoff_demux.csv"),importQC(tissue="Liver",batch=2,file="150602_7001413_0268_BC6K12ANXX_L4678_Tabakoff_demux.csv"))
importQC = function(tissue,batch,file)
x = read.table(file=paste(base.folder,"Rat.RI.",tissue,".smallRNA.batch",batch,"/data/",file,sep=""),skip=5,sep=",")
colnames(x) = c("Lane","SampleID","SampleRef","Index","Description","Control","Project","Yield.Mbases","pctPF","numReads","pctRawClustPerLane","pctPerfectIndexReads","pctOneMismatchIndexReads","pctGrtQ30","MeanQualityScore")
x$tissue = tissue
x$batch = batch
return(x)
}
liverQC = rbind(importQC(tissue="Liver",batch=1,file="150219_7001413_0222_AC6G34ANXX_L1234_Tabakoff_demux.csv"),importQC(tissue="Liver",batch=2,file="150602_7001413_0268_BC6K12ANXX_L4678_Tabakoff_demux.csv"))
head(liverQC)
brainQC=rbind(importQC(tissue="Brain",batch=1,file="140702_7001413_0149_BC54PHACXX_L5678_Tabakoff_demux.csv"),importQC(tissue="Brain",batch=2,file="140918_SN634_0254_AC56FUACXX_L4567_Tabakoff_demux.csv"),importQC(tissue="Brain",batch=3,file="150107_7001413_0207_AC66N3ANXX_L2345_Tabakoff_demux.csv"),importQC(tissue="Brain",batch=4,file="150508_7001413_0258_AC6K0DANXX_L2_Tabakoff_demux.csv"))
totalQC = rbind(liverQC,brainQC)
boxplot(as.numeric(gsub(",","",totalQC$numReads)))
boxplot(as.numeric(gsub(",","",totalQC$numReads,fixed=TRUE)))
gsub(",","",totalQC$numReads,fixed=TRUE))
gsub(",","",totalQC$numReads,fixed=TRUE)
totalQC$numReads
totalQC = rbind(liverQC,brainQC)
totalQC$numReads
head(totalQC)
head(liverQC)
importQC = function(tissue,batch,file)
x = read.table(file=paste(base.folder,"Rat.RI.",tissue,".smallRNA.batch",batch,"/data/",file,sep=""),skip=5,sep=",")
colnames(x) = c("Lane","SampleID","SampleRef","Index","Description","Control","Project","Yield.Mbases","pctPF","numReads","pctRawClustPerLane","pctPerfectIndexReads","pctOneMismatchIndexReads","pctGrtQ30","MeanQualityScore")
x$tissue = tissue
x$batch = batch
return(x)
}
importQC = function(tissue,batch,file){
x = read.table(file=paste(base.folder,"Rat.RI.",tissue,".smallRNA.batch",batch,"/data/",file,sep=""),skip=5,sep=",")
colnames(x) = c("Lane","SampleID","SampleRef","Index","Description","Control","Project","Yield.Mbases","pctPF","numReads","pctRawClustPerLane","pctPerfectIndexReads","pctOneMismatchIndexReads","pctGrtQ30","MeanQualityScore")
x$tissue = tissue
x$batch = batch
return(x)
}
liverQC = rbind(importQC(tissue="Liver",batch=1,file="150219_7001413_0222_AC6G34ANXX_L1234_Tabakoff_demux.csv"),importQC(tissue="Liver",batch=2,file="150602_7001413_0268_BC6K12ANXX_L4678_Tabakoff_demux.csv"))
brainQC=rbind(importQC(tissue="Brain",batch=1,file="140702_7001413_0149_BC54PHACXX_L5678_Tabakoff_demux.csv"),importQC(tissue="Brain",batch=2,file="140918_SN634_0254_AC56FUACXX_L4567_Tabakoff_demux.csv"),importQC(tissue="Brain",batch=3,file="150107_7001413_0207_AC66N3ANXX_L2345_Tabakoff_demux.csv"),importQC(tissue="Brain",batch=4,file="150508_7001413_0258_AC6K0DANXX_L2_Tabakoff_demux.csv"))
head(brainQC)
totalQC = rbind(liverQC,brainQC)
boxplot(as.numeric(gsub(",","",totalQC$numReads,fixed=TRUE)))
table(totalQC$SampleRef)
totalQC = totalQC[totalQC$SampleRef!="unknown",]
table(totalQC$SampleRef)
table(totalQC$SampleID)
boxplot(as.numeric(gsub(",","",totalQC$numReads,fixed=TRUE)))
boxplot(as.numeric(gsub(",","",totalQC$numReads,fixed=TRUE)) ~ totalQC$tissue)
boxplot(as.numeric(gsub(",","",totalQC$numReads,fixed=TRUE)) ~ totalQC$tissue|totalQC$batch)
boxplot(as.numeric(gsub(",","",totalQC$numReads,fixed=TRUE)) ~ totalQC$tissue*totalQC$batch)
totalQC$reads = as.numeric(gsub(",","",totalQC$numReads,fixed=TRUE))
aggregate(totalQC$reads,by=list(tissue=totalQC$tissue,batch=totalQC$batch),summary)
aggregate(totalQC$reads,by=list(tissue=totalQC$tissue,batch=totalQC$batch),function(a) sum(a<10000000))
aggregate(totalQC$reads,by=list(tissue=totalQC$tissue,batch=totalQC$batch),length)
aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue),min)
aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue),length)
aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue),function(a) sum(a<10000000))
totalQC[totalQC$tissue=="Liver" & totalQC$batch==1,]
batchSummary = data.frame(aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue),min),numSamples =aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue),length)$x,numUnusable=aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue),function(a) sum(a<10000000))$x)
batchSummary
importQC = function(tissue,batch,file,date){
x = read.table(file=paste(base.folder,"Rat.RI.",tissue,".smallRNA.batch",batch,"/data/",file,sep=""),skip=5,sep=",")
colnames(x) = c("Lane","SampleID","SampleRef","Index","Description","Control","Project","Yield.Mbases","pctPF","numReads","pctRawClustPerLane","pctPerfectIndexReads","pctOneMismatchIndexReads","pctGrtQ30","MeanQualityScore")
x$tissue = tissue
x$batch = batch
x$date = date
return(x)
}
importQC(tissue="Liver",batch=1,file="150219_7001413_0222_AC6G34ANXX_L1234_Tabakoff_demux.csv",date='25Feb15'd)
importQC(tissue="Liver",batch=1,file="150219_7001413_0222_AC6G34ANXX_L1234_Tabakoff_demux.csv",date='25Feb15')
liverQC = rbind(importQC(tissue="Liver",batch=1,file="150219_7001413_0222_AC6G34ANXX_L1234_Tabakoff_demux.csv",date='25Feb15'),importQC(tissue="Liver",batch=2,file="150602_7001413_0268_BC6K12ANXX_L4678_Tabakoff_demux.csv",date='18Jun15'))
brainQC=rbind(importQC(tissue="Brain",batch=1,file="140702_7001413_0149_BC54PHACXX_L5678_Tabakoff_demux.csv",date='21Jul14'),importQC(tissue="Brain",batch=2,file="140918_SN634_0254_AC56FUACXX_L4567_Tabakoff_demux.csv",date='24Sep14'),importQC(tissue="Brain",batch=3,file="150107_7001413_0207_AC66N3ANXX_L2345_Tabakoff_demux.csv",date='16Jan15'),importQC(tissue="Brain",batch=4,file="150508_7001413_0258_AC6K0DANXX_L2_Tabakoff_demux.csv",date='14May15'))
totalQC = rbind(liverQC,brainQC)
totalQC = totalQC[totalQC$SampleRef!="unknown",]
totalQC$reads = as.numeric(gsub(",","",totalQC$numReads,fixed=TRUE))
batchSummary = data.frame(aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue,date=totalQC$date),min),numSamples =aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue,date=totalQC$date),length)$x,numUnusable=aggregate(totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue,date=totalQC$date),function(a) sum(a<10000000))$x)
batchSummary
batchSummary = data.frame(aggregate(totalQC$reads,by=list(date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),min),numSamples =aggregate(totalQC$reads,by=list(date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),length)$x,numUnusable=aggregate(date=totalQC$date,totalQC$reads,by=list(batch=totalQC$batch,tissue=totalQC$tissue),function(a) sum(a<10000000))$x)
batchSummary = data.frame(aggregate(totalQC$reads,by=list(date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),min),numSamples =aggregate(totalQC$reads,by=list(date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),length)$x,numUnusable=aggregate(totalQC$reads,by=list(date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),function(a) sum(a<10000000))$x)
batchSummary
as.date(batchSummary$date)
as.Date(batchSummary$date)
as.Date(batchSummary$date,"%d%b%y")
batchSummary$date = as.Date(batchSummary$date,"%d%b%y")
batchSummary[order(batchSummary$date),]
aggregate(totalQC$reads,by=list(lane=totalQC$lane,date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),min)
head(totalQC)
aggregate(totalQC$reads,by=list(lane=totalQC$Lane,date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),min)
aggregate(totalQC$reads,by=list(lane=totalQC$Lane,date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),sum)
prettyNum(aggregate(totalQC$reads,by=list(lane=totalQC$Lane,date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),sum)$x,big.mark=",")
laneSummary = data.frame(aggregate(totalQC$reads,by=list(lane=totalQC$Lane,date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),min),totalReads=prettyNum(aggregate(totalQC$reads,by=list(lane=totalQC$Lane,date=totalQC$date,batch=totalQC$batch,tissue=totalQC$tissue),sum)$x,big.mark=","))
laneSummary
laneSummary$date = as.Date(laneSummary$date,"%d%b%y")
laneSummary[order(laneSummary$date),]
batchSummary[order(batchSummary$date),]
rm(list=ls())
options(stringsAsFactors=FALSE)
library(knitr)
setwd("~/Documents/NextGenSeq/Rat.RI.Brain.smallRNA.batch3/")
rawCounts = read.table(file="data/rawReadCounts.01Jul15.txt",sep=" ",header=FALSE,fill=TRUE)
rm(list=ls())
options(stringsAsFactors=FALSE)
library(knitr)
setwd("~/Documents/NextGenSeq/Rat.RI.Liver.smallRNA.batch1/")
rawCounts = read.table(file="data/rawReadCounts.01Jul15.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts
rawCounts$reads = rawCounts$V3
rawCounts$file = rawCounts$V1
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) gsub("BRAIN","",paste(x[1:2],collapse="_"))))
rawCounts
toupper(rawCounts$sample)
rawCounts$sample = toupper(rawCounts$sample)
forPrint = rawCounts[,c("sample","reads")]
forPrint$reads = prettyNum(forPrint$reads,big.mark=",",scientific=FALSE)
colnames(forPrint) = c("sample","Number of Reads")
kable(forPrint,align=rep("c",ncol(forPrint)),row.names=FALSE)
rm(list=ls())
options(stringsAsFactors=FALSE)
library(knitr)
setwd("~/Documents/NextGenSeq/Rat.RI.Liver.smallRNA.batch2/")
rawCounts = read.table(file="data/rawReadCounts.01Jul15.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts
rawCounts$reads = rawCounts$V3
rawCounts$file = rawCounts$V1
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) gsub("LIVER","",paste(x[1:2],collapse="_"))))
rawCounts
rawCounts$sample[rawCounts$sample=="HXB_1"]="HXB1_1"
rawCounts$sample[rawCounts$sample=="XXB15_1"]="HXB15_1"
rawCounts$sample
forPrint = rawCounts[,c("sample","reads")]
forPrint$reads = prettyNum(forPrint$reads,big.mark=",",scientific=FALSE)
colnames(forPrint) = c("sample","Number of Reads")
