paths = paths[paths[,3]>1,]
paths$pvalue = as.numeric(paths[,5]=="+")*paths[,7] + as.numeric(paths[,5]=="-")*(1-paths[,7])
paths$fdr = p.adjust(paths$pvalue,method="BH")
head(paths)
paths
proteinClass = read.table(file=paste(base.path,"data/PANTHER.Pink/pantherProteinClass.27Feb15.txt",sep=""),sep="\t",skip=5,fill=TRUE,header=TRUE)
proteinClass = proteinClass[proteinClass[,3]>1,]
proteinClass$pvalue = as.numeric(proteinClass[,5]=="+")*proteinClass[,7] + as.numeric(proteinClass[,5]=="-")*(1-proteinClass[,7])
proteinClass$fdr = p.adjust(proteinClass$pvalue,method="BH")
head(proteinClass)
head(nos1.corrs[order(nos1.corrs$adjNos1Rank),],11)
nearestNeighbors = nos1.corrs[nos1.corrs$module=="pink" & nos1.corrs$GeneSymbol!="Nos1",]
nearestNeighbors = nearestNeighbors[order(nearestNeighbors$adjNos1Rank),]
topTen = nearestNeighbors[1:10,]
topTen
topTen = nearestNeighbors[1:10,c("GeneSymbol","corNos1","Description")]
topTen$corNos1 = sprintf("%.2f",round(topTen$corNos1,2))
topTen$Description = unlist(lapply(strsplit(topTen$Description,split="[",fixed=TRUE),function(a) a[1]))
topTen
topTen$Description = unlist(lapply(strsplit(topTen$Description,split="(",fixed=TRUE),function(a) a[1]))
topTen
head(pink.intra)
table(pink.intra$GeneBiotype)
pink.intra[,c("gene","GeneSymbol","kWithin","rank")]
head(pink.intra[order(pink.intra$rank),c("gene","GeneSymbol","kWithin","rank")],10)
head(pink.intra[order(pink.intra$rank),c("gene","GeneSymbol","Description","kWithin","rank")],10)
pink.intra[pink.intra$GeneSymbol=="Nos1",]
head(MEs)
moduleMembership[moduleMembership[,1]=="ENSRNOG00000001130",]
pinkME = MEs[,"ME8"]
pinkME
names(pinkME) = colnames(datExpr)
names(pinkME) = rownames(datExpr)
pinkME
barplot(sort(pinkME))
pinkME = pinkME[order(pinkME)]
pinkME
mean(pinkME)
barplot(pinkME)
barplot(pinkME,names.arg=names(pinkME),cex.names=0.5)
barplot(pinkME,names.arg=names(pinkME),cex.names=0.5,ylab="Pink Eigengene Value")
eigenPlot = barplot(pinkME,names.arg=names(pinkME),cex.names=0.5,ylab="Pink Eigengene Value")
axis(1,at=eigenPlot,labels=names(pinkME))
eigenPlot = barplot(pinkME,axes=FALSE,ylab="Pink Eigengene Value")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.2, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.2, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE)
text(eigenPlot, par("usr")[3] - 0.02, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE)
text(eigenPlot, par("usr")[3] - 0.1, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.1, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE)
text(eigenPlot, par("usr")[3] - 0.1, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE,cex=0.8)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.1, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE,cex=0.8)
text(eigenPlot, par("usr")[3] - 0.1, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE,cex=0.7)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.1, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE,cex=0.7)
text(eigenPlot, par("usr")[3] - 0.05, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE,cex=0.7)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.05, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE,cex=0.7)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.06, labels = names(pinkME), srt = 90, pos = 1, xpd = TRUE,cex=0.7)
text(eigenPlot, par("usr")[3] - 0.06, labels = names(pinkME), srt = 90, xpd = TRUE,cex=0.7)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.1, labels = names(pinkME), srt = 90, xpd = TRUE,cex=0.7)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.08, labels = names(pinkME), srt = 90, xpd = TRUE,cex=0.7)
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.08, labels = names(pinkME), srt = 90, xpd = TRUE,cex=0.7)
pdf(file=paste(base.path,"images/eigengeneDist.27Feb15.pdf",sep=""))
eigenPlot = barplot(pinkME,ylab="Pink Eigengene Value",xaxt="n", xlab="")
axis(1,at=eigenPlot,labels=FALSE)
text(eigenPlot, par("usr")[3] - 0.08, labels = names(pinkME), srt = 90, xpd = TRUE,cex=0.7)
dev.off()
rm(list=ls())
options(stringsAsFactors=FALSE)
library(WGCNA)
base.path = "/Volumes/saba/BxH.HxB.Rats/RNA-Seq/"
load(paste(base.path,"Rdata/HXBbrain.RNASeq.WGCNA.27Feb15.Rdata",sep=""))
length(net$dendrograms)
plotDendroAndColors(net$dendrograms[[1]],moduleColors[net$blockGenes[[1]])
plotDendroAndColors(net$dendrograms[[1]],moduleColors[net$blockGenes[[1]]],"Module colors",dendroLabels=FALSE,hang=0.03,addGuide=TRUE,guideHang=0.05)
pdf(file=paste(base.path,"image/wgcna.summaryImage.02Mar15.pdf",sep=""))
plotDendroAndColors(net$dendrograms[[1]],moduleColors[net$blockGenes[[1]]],"Module colors",dendroLabels=FALSE,hang=0.03,addGuide=TRUE,guideHang=0.05)
dev.off()
pdf(file=paste(base.path,"images/wgcna.summaryImage.02Mar15.pdf",sep=""))
plotDendroAndColors(net$dendrograms[[1]],moduleColors[net$blockGenes[[1]]],"Module colors",dendroLabels=FALSE,hang=0.03,addGuide=TRUE,guideHang=0.05)
dev.off()
table(moduleLabels)
table(moduleLabels)[-1]
summary(table(moduleLabels)[-1])
rm(list=ls())
options(stringsAsFactors=FALSE)
library(sva)
library(RUVSeq)
base.path = "/Volumes/saba/BxH.HxB.Rats/RNA-Seq/"
rData.path = "/Volumes/saba/BxH.HxB.Rats/RNA-Seq/Rdata/"
fileListing = read.table(file=paste(base.path,"data/fileListing.brain.26Jan15.txt",sep=""),sep="\t",header=TRUE)
fileListing$rsemName = paste(toupper(gsub(".b[1-9]","",fileListing$sampleName)),".b",fileListing$batch,sep="")
#rsemListing = read.table(file=paste(base.path,"data/fileListing.RSEM.txt",sep=""),sep="\t",header=FALSE)
sampleList=fileListing$rsemName
for(i in sampleList){
y = read.table(file=paste(base.path,"quantitation/rsem.Ensembl/",i,".genes.results",sep=""),sep="\t",header=TRUE)
y=y[,c("gene_id","expected_count")]
colnames(y)[grep("count",colnames(y))]=paste(i,"cnt",sep=".")
if(i==sampleList[1]) counts=y
if(i!=sampleList[1]) counts=merge(counts,y,by=c("gene_id"))
}
rownames(counts)=counts$gene_id
counts=counts[,grep("cnt",colnames(counts))]
counts=counts[,colSums(counts)>10000000]
colnames(counts)=gsub(".cnt","",colnames(counts),fixed=TRUE)
expressed = counts[rowSums(counts>5)>(0.05*ncol(counts)),]
head(expressed)
sum(duplicated(rownames(expressed)))
expressed = expressed[!duplicated(expressed),]
rm(list=ls())
options(stringsAsFactors=FALSE)
library(WGCNA)
#base.path = "/data2/saba/BxH.HxB.Rats/RNA-Seq/"
base.path = "/Volumes/saba/BxH.HxB.Rats/RNA-Seq/"
load(paste(base.path,"Rdata/strainEst.RUVs2.Rdata",sep=""))
dim(strainEst)
datExpr = t(strainEst[grep("ENS",rownames(strainEst)),grepl("BXH",colnames(strainEst)) | grepl("HXB",colnames(strainEst))])
dim(datExpr)
25169-92
pink.corrs = bicor(datExpr[,moduleColors=="pink"])
load(paste(base.path,"Rdata/HXBbrain.RNASeq.WGCNA.27Feb15.Rdata",sep=""))
pink.corrs = bicor(datExpr[,moduleColors=="pink"])
dim(pink.corrs)
pink.corrs[1:5,1:5]
pink.adj = abs(pink.corrs^9)
anno=read.table(file="/Volumes/saba/annotation/ensemblGenes.Rnor_5.0.08Jul14.txt",sep="\t",header=TRUE)
anno=anno[!duplicated(anno$EnsemblGeneID),]
head(anno)
pink.anno = merge(rownames(pink.corrs),anno,by.x=1,by.y="EnsemblGeneID")
head(pink.anno)
rownames(pink.anno)=pink.anno$x
sum(pink.anno$GeneSymbol=="")
pink.anno[pink.anno$GeneSymbol=="",]
pink.anno$GeneSymbol["ENSRNOG00000038953"] = "Hmgb1"
pink.anno$GeneSymbol["ENSRNOG00000043068"] = "Tipin"
pink.anno$GeneSymbol["ENSRNOG00000047355"] = "AABR06011545.1"
pink.anno$GeneSymbol["ENSRNOG00000047880"] = "Ints1"
pink.anno$GeneSymbol["ENSRNOG00000048783"] = "LOC100909700"
pink.anno$GeneSymbol["ENSRNOG00000049238"] = "LOC102552659"
pink.anno$GeneSymbol["ENSRNOG00000049685"] = "AABR06020205.1"
pink.anno$GeneSymbol["ENSRNOG00000038953"]
pink.anno$GeneSymbol["ENSRNOG00000038953"] = "Hmgb1"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000038953"] = "Hmgb1"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000043068"] = "Tipin"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000047355"] = "AABR06011545.1"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000047880"] = "Ints1"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000048783"] = "LOC100909700"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000049238"] = "LOC102552659"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000049685"] = "AABR06020205.1"
pink.anno[rownames(pink.corrs),]
head(pink.anno[rownames(pink.corrs),])
pink.corrs[1:5,1:5]
pink.anno[rownames(pink.corrs),"GeneSymbol"]
cyt = exportNetworkToCytoscape(pink.corrs,edgeFile=paste(base.path,"data/pink.edgeFile.txt",sep=""),nodeFile=paste(base.path,"data/pink.nodeFile.txt",sep=""),weighted=TRUE,threshold=1,altNodeNames=pink.anno[rownames(pink.corrs),"GeneSymbol"])
cyt[[1]]
cyt[[2]]
cyt = exportNetworkToCytoscape(pink.corrs,edgeFile=paste(base.path,"data/pink.edgeFile.txt",sep=""),nodeFile=paste(base.path,"data/pink.nodeFile.txt",sep=""),weighted=TRUE,threshold=0,altNodeNames=pink.anno[rownames(pink.corrs),"GeneSymbol"])
cyt[[1]]
cyt[[2]]
intraConnect = intramodularConnectivity.fromExpr(datExpr, moduleColors, corFnc = "bicor", networkType = "unsigned", power = 9)
intraConnect = data.frame(gene=colnames(datExpr),module=moduleColors,intraConnect)
pink.intra = intraConnect[intraConnect$module=="pink",]
head(pink.intra)
cyt = exportNetworkToCytoscape(pink.corrs,edgeFile=paste(base.path,"data/pink.edgeFile.txt",sep=""),nodeFile=paste(base.path,"data/pink.nodeFile.txt",sep=""),weighted=TRUE,threshold=0,altNodeNames=pink.anno[rownames(pink.corrs),"GeneSymbol"],nodeAttr=pink.intra[rownames(pink.corrs),"kWithin"])
cyt.5 = exportNetworkToCytoscape(pink.corrs,edgeFile=paste(base.path,"data/pink.edgeFile_0.5.txt",sep=""),nodeFile=paste(base.path,"data/pink.nodeFile_0.5.txt",sep=""),weighted=TRUE,threshold=0.5,altNodeNames=pink.anno[rownames(pink.corrs),"GeneSymbol"],nodeAttr=pink.intra[rownames(pink.corrs),"kWithin"])
dim(cyt.5[[1]])
dim(cyt.5[[2]])
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/NextGenSeq/BNLx.SHR.Brain.smallRNA/")
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep=" ",header=FALSE,fill=TRUE)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/BNLx.SHR.Brain.smallRNA/")
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts
rawCounts
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep="\t",header=FALSE,fill=TRUE)
rawCounts
rawCounts = rawCounts[!grepl("total",rawCounts$V1),]
rawCounts
unlist(lapply(strsplit(rawCounts$V1,split=" ",fixed=TRUE),function(x) as.numeric(sub("^\\s+", "", x[1]))))
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/BNLx.SHR.Brain.smallRNA/")
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep="\t",header=FALSE,fill=TRUE)
rawCounts = rawCounts[!grepl("total",rawCounts$V1),]
unlist(lapply(strsplit(rawCounts$V1,split=" ",fixed=TRUE),function(x) as.numeric(sub("^\\s+", "", x[1]))))
unlist(lapply(strsplit(rawCounts[,1],split=" ",fixed=TRUE),function(x) as.numeric(sub("^\\s+", "", x[1]))))
unlist(lapply(strsplit(rawCounts,split=" ",fixed=TRUE),function(x) as.numeric(sub("^\\s+", "", x[1]))))
strsplit(rawCounts,split=" ",fixed=TRUE)
unlist(lapply(strsplit(sub("^\\s+", "",rawCounts),split=" ",fixed=TRUE),function(x) as.numeric(x[1]))))
unlist(lapply(strsplit(sub("^\\s+", "",rawCounts),split=" ",fixed=TRUE),function(x) as.numeric(x[1])))
unlist(lapply(strsplit(sub("^\\s+", "",rawCounts),split=" ",fixed=TRUE),function(x) as.numeric(x[1])/4))
rawCounts$reads = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts),split=" ",fixed=TRUE),function(x) as.numeric(x[1])/4))
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/BNLx.SHR.Brain.smallRNA/")
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep="\t",header=FALSE,fill=TRUE)
rawCounts$reads = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts),split=" ",fixed=TRUE),function(x) as.numeric(x[1])/4))
rawCounts$reads = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) as.numeric(x[1])/4))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) x[2]))
rawCounts$sample
rawCounts$file = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) x[2]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) gsub("small","",gsub(".fastq","",x[length(x)]))))
rawCounts
rawCounts = rawCounts[!grepl("total",rawCounts$sample),]
rawCounts
forPrint
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/BNLx.SHR.Brain.smallRNA/")
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep="\t",header=FALSE,fill=TRUE)
#rawCounts = rawCounts[!grepl("total",rawCounts$V1),]
rawCounts$reads = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) as.numeric(x[1])/4))
rawCounts$file = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) x[2]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) gsub("small","",gsub(".fastq","",x[length(x)]))))
rawCounts = rawCounts[!grepl("total",rawCounts$sample),]
rawCounts
forPrint = rawCounts[,c("sample","reads")]
forPrint$reads = prettyNum(sum(forPrint$reads)/2,big.mark=",",scientific=FALSE)
forPrint
forPrint = rawCounts[,c("sample","reads")]
forPrint
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/BNLx.SHR.Brain.Females.smallRNA/")
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep="\t",header=FALSE,fill=TRUE)
setwd("~/Documents/NextGenSeq/BNLx.SHR.Brain.Female.smallRNA/")
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep="\t",header=FALSE,fill=TRUE)
rawCounts
rawCounts$reads = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) as.numeric(x[1])/4))
rawCounts$file = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) x[2]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) gsub("small","",gsub(".fastq","",x[length(x)]))))
rawCounts = rawCounts[!grepl("total",rawCounts$sample),]
rawCounts
rawCounts$sample = gsub("BN_LX","BNLx",rawCounts$sample)
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(a) paste(a[1:2],collapse="")))
rawCounts
forPrint = rawCounts[,c("sample","reads")]
forPrint$reads = prettyNum(forPrint$reads,big.mark=",",scientific=FALSE)
colnames(forPrint) = c("sample","Number of Reads")
forPrint
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/BNLx.SHR.Heart.smallRNA/")
rawCounts = read.table(file="data/rawReadCounts.03Mar15.txt",sep="\t",header=FALSE,fill=TRUE)
rawCounts
rawCounts$reads = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) as.numeric(x[1])/4))
rawCounts$file = unlist(lapply(strsplit(sub("^\\s+", "",rawCounts[,1]),split=" ",fixed=TRUE),function(x) x[2]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) gsub("small","",gsub(".fastq","",x[length(x)]))))
rawCounts$sample = gsub("BN_LX","BNLx",rawCounts$sample)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(a) paste(a[1:2],collapse="")))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) gsub("small","",gsub(".fastq","",x[length(x)]))))
rawCounts$sample = gsub("BN_LX","BNLx",rawCounts$sample)
rawCounts$sample = gsub("SHR_H","SHR",rawCounts$sample)
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(a) a[1]))
sample
rawCounts
rawCounts = rawCounts[!grepl("total",rawCounts$sample),]
forPrint = rawCounts[,c("sample","reads")]
forPrint$reads = prettyNum(forPrint$reads,big.mark=",",scientific=FALSE)
rawCounts = read.table(file="data/rawReadCounts.30Sep14.txt",sep="\t",header=FALSE,fill=TRUE)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/Rat.RI.Brain.smRNA.batch1/")
rawCounts = read.table(file="data/rawReadCounts.30Sep14.txt",sep="\t",header=FALSE,fill=TRUE)
setwd("~/Documents/NextGenSeq/Rat.RI.Brain.smallRNA.batch1/")
rawCounts = read.table(file="data/rawReadCounts.30Sep14.txt",sep="\t",header=FALSE,fill=TRUE)
rawCounts
rawCounts = read.table(file="data/rawReadCounts.30Sep14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)])))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts = read.table(file="data/rawReadCounts.30Sep14.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts$reads = rawCounts$V3
rawCounts$file = rawCounts$V1
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) gsub("BRAIN","",paste(x[2:3],collapse=""))))
rawCOunts
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) gsub("BRAIN","",paste(x[2:3],collapse="_"))))
rawCounts
forPrint = rawCounts[,c("sample","reads")]
forPrint$reads = prettyNum(forPrint$reads,big.mark=",",scientific=FALSE)
colnames(forPrint) = c("sample","Number of Reads")
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/Rat.RI.Brain.smallRNA.batch2/")
rawCounts = read.table(file="data/rawReadCounts.30Sep14.txt",sep=" ",header=FALSE,fill=TRUE)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/Rat.RI.Brain.smallRNA.batch3/")
rawCounts = read.table(file="data/rawReadCounts.04Mar15.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts
rawCounts$reads = rawCounts$V3
rawCounts$file = rawCounts$V1
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) gsub("BRAIN","",paste(x[2:3],collapse="_"))))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) gsub("BRAIN","",paste(x[1:2],collapse="_"))))
rawCounts
578227978+877453900
(578227978+877453900)/32
30*4*(578227978+877453900)/32
rm(list=ls())
options(stringsAsFactors=FALSE)
#######################
##  local functions  ##
#######################
# format GTF files to include transcript ids, gene ids, and fpkm values
gtfFormat = function(data,FPKM=TRUE){
data$transcript_id = unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub(" transcript_id ","",a[grep("transcript",a)])))
data$gene_id = unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub("gene_id ","",a[grep("gene",a)])))
if(FPKM) data$fpkm = as.numeric(unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub(" FPKM ","",a[grep("FPKM",a)]))))
return(data)
}
base.path = "/Volumes/saba/BNLx.SHR"
heart = gtfFormat(read.table(file=paste(base.path,"RNA-Seq.Heart/totalRNA/reconstruction/reconstruct.total.heart.07Oct14.FINAL.gtf",sep=""),sep="\t",header=FALSE),FPKM=FALSE)
base.path = "/Volumes/saba/BNLx.SHR/"
heart = gtfFormat(read.table(file=paste(base.path,"RNA-Seq.Heart/totalRNA/reconstruction/reconstruct.total.heart.07Oct14.FINAL.gtf",sep=""),sep="\t",header=FALSE),FPKM=FALSE)
head(heart)
length(unique(heart$transcript_id))
length(unique(heart$gene_id))
prefix = unlist(lapply(strsplit(heart$transcript_id,split=".",fixed=TRUE),function(a) a[1]))
table(prefix)
prefix[grep("ENSRNOT",prefix)]="ENSRNOT"
table(prefix)
heart.transcripts = heart[!duplicated(heart$transcript_id,heart$gene_id),c("transcript_id","gene_id")]
rm(list=ls())
options(stringsAsFactors=FALSE)
library(WGCNA)
base.path = "/Volumes/saba/BxH.HxB.Rats/RNA-Seq/"
load(paste(base.path,"Rdata/HXBbrain.RNASeq.WGCNA.27Feb15.Rdata",sep=""))
nos1.module = moduleMembership[moduleMembership[,1]=="ENSRNOG00000001130","moduleColors"]
## number of genes in module
sum(moduleColors==nos1.module)
# 351 genes
nos1.corrs = data.frame(corNos1=bicor(datExpr,datExpr[,"ENSRNOG00000001130"]))
nos1.corrs$adjNos1 = abs(nos1.corrs$corNos1^9)
anno=read.table(file="/Volumes/saba/annotation/ensemblGenes.Rnor_5.0.08Jul14.txt",sep="\t",header=TRUE)
anno=anno[!duplicated(anno$EnsemblGeneID),]
nos1.corrs=merge(nos1.corrs,anno,by.x=0,by.y="EnsemblGeneID",all.x=TRUE)
nos1.corrs$adjNos1Rank = nrow(nos1.corrs)-rank(nos1.corrs$adjNos1)+1
nos1.corrs = merge(nos1.corrs,data.frame(module=moduleColors),by.x="Row.names",by.y=0)
nearestNeighbors = nos1.corrs[nos1.corrs$module=="pink" & nos1.corrs$GeneSymbol!="Nos1",]
nearestNeighbors = nearestNeighbors[order(nearestNeighbors$adjNos1Rank),]
topTen = nearestNeighbors[1:10,c("GeneSymbol","corNos1","Description")]
topTen$corNos1 = sprintf("%.2f",round(topTen$corNos1,2))
topTen$Description = unlist(lapply(strsplit(topTen$Description,split="[",fixed=TRUE),function(a) a[1]))
topTen$Description = unlist(lapply(strsplit(topTen$Description,split="(",fixed=TRUE),function(a) a[1]))
###  Examine Pink Module  ###
intraConnect = intramodularConnectivity.fromExpr(datExpr, moduleColors, corFnc = "bicor", networkType = "unsigned", power = 9)
intraConnect = data.frame(gene=colnames(datExpr),module=moduleColors,intraConnect)
pink.intra = intraConnect[intraConnect$module=="pink",]
pink.intra = merge(pink.intra,anno,by.x="gene",by.y="EnsemblGeneID",all.x=TRUE)
pink.intra$rank = nrow(pink.intra) - rank(pink.intra$kWithin) + 1
head(pink.intra[order(pink.intra$rank),c("gene","GeneSymbol","Description","kWithin","rank")],10)
pink.intra[pink.intra$GeneSymbol=="Nos1",]
rm(list=ls())
options(stringsAsFactors=FALSE)
library(WGCNA)
base.path = "/Volumes/saba/BxH.HxB.Rats/RNA-Seq/"
load(paste(base.path,"Rdata/HXBbrain.RNASeq.WGCNA.27Feb15.Rdata",sep=""))
load(paste(base.path,"Rdata/strainEst.RUVs2.Rdata",sep=""))
datExpr = t(strainEst[grep("ENS",rownames(strainEst)),grepl("BXH",colnames(strainEst)) | grepl("HXB",colnames(strainEst))])
nos1.module = moduleMembership[moduleMembership[,1]=="ENSRNOG00000001130","moduleColors"]
nos1.corrs = data.frame(corNos1=bicor(datExpr,datExpr[,"ENSRNOG00000001130"]))
nos1.corrs$adjNos1 = abs(nos1.corrs$corNos1^9)
anno=read.table(file="/Volumes/saba/annotation/ensemblGenes.Rnor_5.0.08Jul14.txt",sep="\t",header=TRUE)
anno=anno[!duplicated(anno$EnsemblGeneID),]
nos1.corrs=merge(nos1.corrs,anno,by.x=0,by.y="EnsemblGeneID",all.x=TRUE)
nos1.corrs$adjNos1Rank = nrow(nos1.corrs)-rank(nos1.corrs$adjNos1)+1
nos1.corrs = merge(nos1.corrs,data.frame(module=moduleColors),by.x="Row.names",by.y=0)
nearestNeighbors = nos1.corrs[nos1.corrs$module=="pink" & nos1.corrs$GeneSymbol!="Nos1",]
nearestNeighbors = nearestNeighbors[order(nearestNeighbors$adjNos1Rank),]
topTen = nearestNeighbors[1:10,c("GeneSymbol","corNos1","Description")]
topTen$corNos1 = sprintf("%.2f",round(topTen$corNos1,2))
topTen$Description = unlist(lapply(strsplit(topTen$Description,split="[",fixed=TRUE),function(a) a[1]))
topTen$Description = unlist(lapply(strsplit(topTen$Description,split="(",fixed=TRUE),function(a) a[1]))
intraConnect = intramodularConnectivity.fromExpr(datExpr, moduleColors, corFnc = "bicor", networkType = "unsigned", power = 9)
intraConnect = data.frame(gene=colnames(datExpr),module=moduleColors,intraConnect)
pink.intra = intraConnect[intraConnect$module=="pink",]
pink.intra = merge(pink.intra,anno,by.x="gene",by.y="EnsemblGeneID",all.x=TRUE)
pink.intra$rank = nrow(pink.intra) - rank(pink.intra$kWithin) + 1
pink.corrs = bicor(datExpr[,moduleColors=="pink"])
pink.adj = abs(pink.corrs^9)
pink.anno = merge(rownames(pink.corrs),anno,by.x=1,by.y="EnsemblGeneID")
rownames(pink.anno)=pink.anno$x
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000038953"] = "Hmgb1"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000043068"] = "Tipin"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000047355"] = "AABR06011545.1"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000047880"] = "Ints1"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000048783"] = "LOC100909700"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000049238"] = "LOC102552659"
pink.anno$GeneSymbol[pink.anno$x=="ENSRNOG00000049685"] = "AABR06020205.1"
cyt.9 = exportNetworkToCytoscape(pink.corrs,edgeFile=paste(base.path,"data/pink.edgeFile_0.5.txt",sep=""),nodeFile=paste(base.path,"data/pink.nodeFile_0.5.txt",sep=""),weighted=TRUE,threshold=0.9,altNodeNames=pink.anno[rownames(pink.corrs),"GeneSymbol"],nodeAttr=pink.intra[rownames(pink.corrs),"kWithin"])
dim(cyt.9[[2]])
dim(cyt.9[[1]])
head(cyt.9[[1]])
head(cyt.9[[2]])
cyt.8 = exportNetworkToCytoscape(pink.corrs,edgeFile=paste(base.path,"data/pink.edgeFile_0.8.txt",sep=""),nodeFile=paste(base.path,"data/pink.nodeFile_0.8.txt",sep=""),weighted=TRUE,threshold=0.8,altNodeNames=pink.anno[rownames(pink.corrs),"GeneSymbol"],nodeAttr=pink.intra[rownames(pink.corrs),"kWithin"])
cyt.85 = exportNetworkToCytoscape(pink.corrs,edgeFile=paste(base.path,"data/pink.edgeFile_0.85.txt",sep=""),nodeFile=paste(base.path,"data/pink.nodeFile_0.85.txt",sep=""),weighted=TRUE,threshold=0.85,altNodeNames=pink.anno[rownames(pink.corrs),"GeneSymbol"],nodeAttr=pink.intra[rownames(pink.corrs),"kWithin"])
=pink.intra[rownames(pink.corrs),"kWithin"]
pink.intra[rownames(pink.corrs),"kWithin"]
pink.intra[1:4,]
rownames(pink.intra) = pink.intra$gene
pink.intra[rownames(pink.corrs),"kWithin"]
cyt.85 = exportNetworkToCytoscape(pink.corrs,edgeFile=paste(base.path,"data/pink.edgeFile_0.85.txt",sep=""),nodeFile=paste(base.path,"data/pink.nodeFile_0.85.txt",sep=""),weighted=TRUE,threshold=0.85,altNodeNames=pink.anno[rownames(pink.corrs),"GeneSymbol"],nodeAttr=pink.intra[rownames(pink.corrs),"kWithin"])
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/Rat.RI.Brain.smallRNA.batch2/")
rawCounts = read.table(file="data/rawReadCounts.04Mar15.txt",sep=" ",header=FALSE,fill=TRUE)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/NextGenSeq/Rat.RI.Brain.smallRNA.batch2/")
rawCounts = read.table(file="data/rawReadCounts.04Mar15.txt",sep=" ",header=FALSE,fill=TRUE)
rawCounts$reads = rawCounts$V3
rawCounts$file = rawCounts$V1
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) gsub("BRAIN","",paste(x[2:3],collapse="_"))))
rawCounts
rawCounts$reads = rawCounts$V3
rawCounts$file = rawCounts$V1
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) paste("HXB",x[1],"_1",sep=""))))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) paste("HXB",x[1],"_1",sep="")))
rawCounts
rawCounts$sample = unlist(lapply(strsplit(rawCounts$file,split="/",fixed=TRUE),function(x) x[length(x)]))
rawCounts$sample = unlist(lapply(strsplit(rawCounts$sample,split="_",fixed=TRUE),function(x) paste("HXB",x[1],"_1",sep="")))
rawCounts$sample[grep("shr",rawCounts$sample)]="SHR_1"
rawCounts$sample[rawCounts$sample=="HXB2_1"]="BXH2_1"
rawCounts
prettyNum(578227978+877453900+467485261,big.mark=",",scientific=FALSE)
rm(list=ls())
options(stringsAsFactors=FALSE)
#######################
##  local functions  ##
#######################
# format GTF files to include transcript ids, gene ids, and fpkm values
gtfFormat = function(data,FPKM=TRUE){
data$transcript_id = unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub(" transcript_id ","",a[grep("transcript",a)])))
data$gene_id = unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub("gene_id ","",a[grep("gene",a)])))
if(FPKM) data$fpkm = as.numeric(unlist(lapply(strsplit(data$V9,split=";",fixed=TRUE),function(a) gsub(" FPKM ","",a[grep("FPKM",a)]))))
return(data)
}
```
```{r}
base.path = "/Volumes/saba/BNLx.SHR/"
heart = gtfFormat(read.table(file=paste(base.path,"RNA-Seq.Heart/totalRNA/reconstruction/reconstruct.total.heart.07Oct14.FINAL.gtf",sep=""),sep="\t",header=FALSE),FPKM=FALSE)
heart.transcripts = heart[!duplicated(heart$transcript_id,heart$gene_id),c("transcript_id","gene_id")]
prefix = unlist(lapply(strsplit(heart$transcript_id,split=".",fixed=TRUE),function(a) a[1]))
prefix[grep("ENSRNOT",prefix)]="ENSRNOT"
table(prefix)
prefix = unlist(lapply(strsplit(heart.transcripts$transcript_id,split=".",fixed=TRUE),function(a) a[1]))
prefix[grep("ENSRNOT",prefix)]="ENSRNOT"
table(prefix)
13315+12557+6018
31890+179+7299
heart.transcripts[grep("ENS",heart.transcripts$transcript_id),][1:4,]
ensemblGenes = unique(heart.transcripts$gene_id[grep("ENS",heart.transcripts$transcript_id)])
length(unique(heart.transcripts$gene_id))
table(prefix[heart.transcripts$gene_id %in% ensemblGenes])
1339+655+1369
liver = gtfFormat(read.table(file=paste(base.path,"RNA-Seq.Liver/totalRNA.UCD/reconstruction/reconstruct.liver.07Oct14.FINAL.gtf",sep=""),sep="\t",header=FALSE),FPKM=FALSE)
liver.transcripts = liver[!duplicated(liver$transcript_id,liver$gene_id),c("transcript_id","gene_id")]
prefix = unlist(lapply(strsplit(liver.transcripts$transcript_id,split=".",fixed=TRUE),function(a) a[1]))
prefix[grep("ENSRNOT",prefix)]="ENSRNOT"
ensemblGenes = unique(liver.transcripts$gene_id[grep("ENS",liver.transcripts$transcript_id)])
table(prefix)
140+6605
4964+233+4791
length(unique(liver.transcripts$gene_id))
table(prefix[liver.transcripts$gene_id %in% ensemblGenes])
854+631+1230
brain1 = gtfFormat(read.table(file=paste(base.path,"RNA-Seq.Brain/reconstruction/reconstruct.brain.polya.26Feb15.gtf",sep=""),sep="\t",header=FALSE),FPKM=FALSE)
brain2 = gtfFormat(read.table(file=paste(base.path,"RNA-Seq.Brain/reconstruction/reconstruct.brain.nonpolya.26Feb15.gtf",sep=""),sep="\t",header=FALSE),FPKM=FALSE)
brain = rbind(brain1,brain2)
brain.transcripts = brain[!duplicated(brain$transcript_id,brain$gene_id),c("transcript_id","gene_id")]
prefix = unlist(lapply(strsplit(brain.transcripts$transcript_id,split=".",fixed=TRUE),function(a) a[1]))
prefix[grep("ENSRNOT",prefix)]="ENSRNOT"
table(prefix)
ensemblGenes = unique(brain.transcripts$gene_id[grep("ENS",brain.transcripts$transcript_id)])
length(unique(brain.transcripts$gene_id))
7299+179
21645+1699+6970
table(prefix[brain.transcripts$gene_id %in% ensemblGenes])
2529+586+2287
